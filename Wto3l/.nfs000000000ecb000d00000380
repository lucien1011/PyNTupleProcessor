
from Core.Sequence import Sequence
from Core.EndSequence import EndSequence
from Core.OutputInfo import OutputInfo
from Core.Utils.LambdaFunc import LambdaFunc

#from DarkZ.Dataset.Run2016.ZXCR_MC_DarkPhoton import * 
#from DarkZ.Dataset.Run2016.ZXCR_Data_DarkPhoton import * 

from Wto3l.Dataset.Run2016.Wto3l_Data import *
from Wto3l.Dataset.Run2016.Wto3l_MC import *

from Wto3l.Sequence.RecoSequence import * 

from Plotter.Plotter import Plotter
from Plotter.PlotEndModule import PlotEndModule
from Plotter.Plot import Plot

#out_path = "ZPlusX/DataMCDistributions/SkimTree_DarkPhoton_ZX_Run2016Data_m4l118-130/2018-11-06/"
out_path = "Wto3l/DataMCDistributions/Run2016/2019-01-21/"

mZ1PlotRange = [40,40.,120.]
#mZ2PlotRange = [30,0.,60.]
#mZ2PlotRange = [60,0.,120.]
#h4lPlotRange = [100,0.,500.]
#h4lPlotRange = [20,100.,140.]
#deltaRPlotRange2 = [40,0.,4.]
#deltaRPlotRange = [40,0.,4.]
general_plots = []
#for eachCR in ["3p1f","2p2f"]:
    #if eachCR == "3p1f":
        #region_sel_str = "x.nZXCRFailedLeptons[0] == 1"
        #region_sel_str_whole = "x: x.nZXCRFailedLeptons[0] == 1"
    #else:
        #region_sel_str = "x.nZXCRFailedLeptons[0] == 2"
        #region_sel_str_whole = "x: x.nZXCRFailedLeptons[0] == 2"

general_plots.extend([
    Plot("Z1_mass",         ["TH1D","Z1_mass","",]+mZ1PlotRange,        LambdaFunc('x: x.massZ1[0]'),       selFunc=LambdaFunc('x:x.massZ1[0] > 0')      ),
    Plot("Lep1_pt",          ["TH1D","Lep1_pt","",40,0.,200.],           LambdaFunc('x:x.pTL1[0]'),          selFunc=LambdaFunc('x:x.pTL1[0] > 0')        ),
    Plot("Lep2_pt",          ["TH1D","Lep2_pt","",40,0.,200.],           LambdaFunc('x:x.pTL2[0]'),          selFunc=LambdaFunc('x:x.pTL2[0] > 0')        ),
    Plot("Lep3_pt",          ["TH1D","Lep3_pt","",40,0.,200.],           LambdaFunc('x:x.pTL3[0]'),          selFunc=LambdaFunc('x:x.pTL3[0] > 0')        ),
    Plot("3lep_pt",          ["TH1D","3lep_pt","",40,0.,200.],           LambdaFunc('x:x.pT3l[0]'),          selFunc=LambdaFunc('x:x.pT3l[0] > 0')        ),

        #Plot("Z2_mass_vs_DeltaR34_"+eachCR,["TH2D","Z2_mass_vs_DeltaR34_"+eachCR,"",]+mZ2PlotRange+deltaRPlotRange2,LambdaFunc('x: [x.massZ2[0],x.deltaRL34]'),selFunc=LambdaFunc(region_sel_str_whole),dim=2),
        #Plot("Z2_mass_"+eachCR,         ["TH1D","Z2_mass_"+eachCR,"",]+mZ2PlotRange,        LambdaFunc('x: x.massZ2[0]'),       selFunc=LambdaFunc(region_sel_str_whole)      ),
        #Plot("Z1_4e_mass_"+eachCR,      ["TH1D","Z1_4e_mass_"+eachCR,"",]+mZ1PlotRange,     LambdaFunc('x: x.massZ1[0]'),       selFunc=LambdaFunc('x: x.mass4e[0] > 0 and '+region_sel_str)          ),
        #Plot("Z2_4e_mass_"+eachCR,      ["TH1D","Z2_4e_mass_"+eachCR,"",]+mZ2PlotRange,     LambdaFunc('x: x.massZ2[0]'),       selFunc=LambdaFunc('x: x.mass4e[0] > 0 and '+region_sel_str)          ),
                      
        Plot("met",             ["TH1D","met","",40,0.,200.],               LambdaFunc('x: x.met[0]'),          selFunc=LambdaFunc('x:x.met[0] > 0'),     ),
        #Plot("nVtx",            ["TH1D","nVtx","",30,0.0,60.0],             LambdaFunc('x: x.nVtx[0]'),         selFunc=LambdaFunc(region_sel_str_whole),     ),
        #Plot("MinDeltaRL",      ["TH1D","MinDeltaRL","",]+deltaRPlotRange2,  LambdaFunc('x: x.minDeltaRL'),     selFunc=LambdaFunc(region_sel_str_whole),       ),
        ])

plots =  general_plots
#for plot in plots:
#    plot.plotSetting.divideByBinWidth = True

nCores                  = 5
outputDir               = "/raid/raid7/kshi/Zprime/"+out_path
nEvents                 = -1
disableProgressBar      = False
componentList           = [DYJetsToLL_M50,DYJetsToLL_M10To50,WZTo3LNu,TTJets,Data_Run2016,]#predCR]
justEndSequence         = False

for dataset in componentList:
    if dataset.isMC:
        #dataset.lumi = 41.4
        dataset.lumi = 35.9
    for component in dataset.componentList:
        component.maxEvents = nEvents

plotter                 = Plotter("Plotter",plots)

sequence                = Wto3l_sequence

sequence.add(plotter)

outputInfo              = OutputInfo("OutputInfo")
outputInfo.outputDir    = outputDir
outputInfo.TFileName    = "DataMCDistribution.root"

endSequence = EndSequence(skipHadd=justEndSequence)
endModuleOutputDir = "/home/kshi/public_html/Zprime/"+out_path
endSequence.add(PlotEndModule(endModuleOutputDir,plots))
