diff --cc Zprime/Config/PlotDefinition.py
index 57f23cd,4250d6c..0000000
deleted file mode 100644,100644
--- a/Zprime/Config/PlotDefinition.py
+++ /dev/null
diff --cc Zprime/Dataset/Run2016/SkimTree_Bkg_m4l70.py
index 7107119,f26379f..0000000
deleted file mode 100644,100644
--- a/Zprime/Dataset/Run2016/SkimTree_Bkg_m4l70.py
+++ /dev/null
diff --cc Zprime/Dataset/Run2017/SkimTree_Bkg_m4l70.py
index bc51aca,c4896c4..0000000
deleted file mode 100644,100644
--- a/Zprime/Dataset/Run2017/SkimTree_Bkg_m4l70.py
+++ /dev/null
diff --cc Zprime/Skimmer/AnalysisSkimmer.py
index 4cf88d2,136f11a..0000000
deleted file mode 100644,100644
--- a/Zprime/Skimmer/AnalysisSkimmer.py
+++ /dev/null
diff --cc Zprime/plot_Zprime_SR_Run2017_cfg.py
index 3409d35,8069e26..0000000
deleted file mode 100644,100644
--- a/Zprime/plot_Zprime_SR_Run2017_cfg.py
+++ /dev/null
diff --git a/Core b/Core
--- a/Core
+++ b/Core
@@ -1 +1 @@
-Subproject commit 3bded6436e4adc5d68343257292ba90d8142ef03
+Subproject commit 3bded6436e4adc5d68343257292ba90d8142ef03-dirty
diff --git a/Plotter/PlotEndModule.py b/Plotter/PlotEndModule.py
index 9d88584..9d9707b 100644
--- a/Plotter/PlotEndModule.py
+++ b/Plotter/PlotEndModule.py
@@ -159,7 +159,7 @@ class PlotEndModule(EndModule):
                 else:
                     totalsum.Add(h)
 
-        self.sortHistList(histList)
+        #self.sortHistList(histList)
 
         if plot.plotSetting.divideByBinWidth:
             for hist,sample,_,_ in histList:
diff --git a/Plotter/PlotSetting.py b/Plotter/PlotSetting.py
index 4da3145..801c027 100644
--- a/Plotter/PlotSetting.py
+++ b/Plotter/PlotSetting.py
@@ -2,7 +2,7 @@ class PlotSetting(object):
     def __init__(self,
             divideByBinWidth=False,
             x_axis_title=None,x_axis_labels=None,x_axis_title_size=0.04,
-            y_axis_title=None,y_axis_labels=None,y_axis_title_size=0.05,
+            y_axis_title=None,y_axis_labels=None,y_axis_title_size=0.04,
             defaultLabelDict={},
             sf_x_pos=0.11,
             sf_y_pos=0.92,
@@ -19,7 +19,7 @@ class PlotSetting(object):
             bin_width_label="",
             leg_pos=[],
             leg_column=None,
-            leg_text_size=0.03,
+            leg_text_size=0.02,
             minimum=None,
             marker_size=0.5,
             marker_style=5,
diff --git a/Plotter/SampleColor.py b/Plotter/SampleColor.py
index ca65f34..a98759e 100644
--- a/Plotter/SampleColor.py
+++ b/Plotter/SampleColor.py
@@ -16,7 +16,7 @@ sampleColorDict = {
                 "TTJets":ROOT.kAzure-4,
 
                 "DYJetsToLL_M50":ROOT.kSpring+2,
-                "DYJetsToLL_M10to50":ROOT.kSpring+2,
+		"DYJetsToLL_M10to50":ROOT.kSpring+2,
                 "DYJets":ROOT.kSpring+2,
 
                 "WZTo3LNu":ROOT.kViolet-1,
diff --git a/Wto3l/Skimmer/FinalstateSkimmer.py b/Wto3l/Skimmer/FinalstateSkimmer.py
index 6b93c79..34850b6 100644
--- a/Wto3l/Skimmer/FinalstateSkimmer.py
+++ b/Wto3l/Skimmer/FinalstateSkimmer.py
@@ -6,7 +6,7 @@ class FinalstateSkimmer(Module):
         super(FinalstateSkimmer,self).__init__(name)
         
     def analyze(self,event):
-        
+        '''
         if ("Data_sr_Run2016" in self.dataset.name) or ("WZTo3LNu" in self.dataset.name) or ("WmTo3munu" in self.dataset.name) or ("WpTo3munu" in self.dataset.name) or ("Data_memCR_sr_Run2016" in self.dataset.name):
             if abs(event.idL1[0]) == 13 and abs(event.idL2[0]) == 13 and abs(event.idL3[0]) == 13 and event.IsoL3[0] < 0.35:
                 return True
@@ -17,7 +17,7 @@ class FinalstateSkimmer(Module):
                 return True
             else:
                 return False
-        
+        '''
         ''' 
         if ("Data_memCR_Run2016" in self.dataset.name) or ("WZTo3LNu_memCR" in self.dataset.name) or ("TTJets_memCR" in self.dataset.name) or ("DYJetsToLL_M50_memCR" in self.dataset.name) or ("DYJetsToLL_M10To50_memCR" in self.dataset.name):
             if abs(event.idL1[0]) == 11 and abs(event.idL2[0]) == 11 and abs(event.idL3[0]) == 13 and event.IsoL3[0] >= 0.35 and 1.4 < event.etaL3[0] <= 2.5:
diff --git a/Wto3l/Weighter/FakerateWeighter.py b/Wto3l/Weighter/FakerateWeighter.py
index 70133b4..f8d3ff7 100644
--- a/Wto3l/Weighter/FakerateWeighter.py
+++ b/Wto3l/Weighter/FakerateWeighter.py
@@ -4,7 +4,8 @@ import ROOT
 class FakerateWeighter(Module):
     def __init__(self,name):
         super(FakerateWeighter,self).__init__(name)
-        self.inputPath       = "/raid/raid7/kshi/Zprime/Wto3l/FakeRate/Run2016/2019-08-06/finalstate_eem/fr_ratio_WOZpeak/ratioPlot.root"
+ 	self.inputPath	     = "/cmsuf/data/store/user/t2/users/nikmenendez/fr_ratio_WOZpeak/ratioPlot.root"
+        #self.inputPath       = "/raid/raid7/kshi/Zprime/Wto3l/FakeRate/Run2016/2019-08-06/finalstate_eem/fr_ratio_WOZpeak/ratioPlot.root"
         #self.inputPath       = "/raid/raid7/kshi/Zprime/Wto3l/FakeRate/Run2016/2019-08-06/finalstate_eem/fr_ratio/ratioPlot.root"
         #self.inputPath       = "/raid/raid7/kshi/Zprime/Wto3l/FakeRate/Run2016/2019-07-31/finalstate_mem/fr_ratio_MET100/ratioPlot.root"
         #inputFileName   = "ratioPlot.root"
diff --git a/Wto3l/plot_Wto3l_cfg.py b/Wto3l/plot_Wto3l_cfg.py
index e39e011..dd1f34f 100644
--- a/Wto3l/plot_Wto3l_cfg.py
+++ b/Wto3l/plot_Wto3l_cfg.py
@@ -7,14 +7,16 @@ from Core.Utils.LambdaFunc import LambdaFunc
 #from DarkZ.Dataset.Run2016.ZXCR_MC_DarkPhoton import * 
 #from DarkZ.Dataset.Run2016.ZXCR_Data_DarkPhoton import * 
 
-from Wto3l.Dataset.Run2016.Wto3l_Data import *
-from Wto3l.Dataset.Run2016.Wto3l_MC import *
-from Wto3l.Dataset.Run2016.Wto3l_Data_sr import *
-from Wto3l.Dataset.Run2016.Wto3l_MC_sr import *
-from Wto3l.Dataset.Run2016.Wto3l_memCR_Data import *
-from Wto3l.Dataset.Run2016.Wto3l_memCR_Data_sr import *
-from Wto3l.Dataset.Run2016.Wto3l_memCR_MC import *
-from Wto3l.Dataset.Run2016.TTbar_test import *
+#from Wto3l.Dataset.Run2016.Wto3l_Data import *
+#from Wto3l.Dataset.Run2016.Wto3l_MC import *
+#from Wto3l.Dataset.Run2016.Wto3l_Data_sr import *
+#from Wto3l.Dataset.Run2016.Wto3l_MC_sr import *
+#from Wto3l.Dataset.Run2016.Wto3l_memCR_Data import *
+#from Wto3l.Dataset.Run2016.Wto3l_memCR_Data_sr import *
+#from Wto3l.Dataset.Run2016.Wto3l_memCR_MC import *
+#from Wto3l.Dataset.Run2016.TTbar_test import *
+from Wto3l.Dataset.Run2017.Wto3l_MC import *
+from Wto3l.Dataset.Run2018.Wto3l_MC import *
 
 from Wto3l.Sequence.RecoSequence import * 
 
@@ -30,10 +32,10 @@ from Plotter.Plot import Plot
 #out_path = "Wto3l/FakeRate/Run2016/2019-08-13/finalstate_eem/failIso_endcap_TTbar_WOZpeak/"
 #out_path = "Wto3l/DataMCDistributions/Run2016/2019-08-06/FReemWOZpeak_SR_mmm/"
 #out_path = "Wto3l/SR_MCDistributions/Run2016/2019-08-07/check_TT_DY/"
-out_path = "Wto3l/DataMCDistributions/Run2016/test/"
+#out_path = "Wto3l/DataMCDistributions/Run2016/test/"
+out_path = "Wto3l/"
 
-
-mZ1PlotRange = [40,40.,120.]
+mZ1PlotRange = [60,10.,120.]
 #mZ2PlotRange = [30,0.,60.]
 #mZ2PlotRange = [60,0.,120.]
 #h4lPlotRange = [100,0.,500.]
@@ -49,38 +51,48 @@ general_plots = []
         #region_sel_str = "x.nZXCRFailedLeptons[0] == 2"
         #region_sel_str_whole = "x: x.nZXCRFailedLeptons[0] == 2"
 
+# __________________________________________________________________________________ ||
+sel_3mu = "x.lep_id.size() >= 3 and x.lep_pt.size() >= 3"
+# __________________________________________________________________________________ ||
+
 general_plots.extend([
     #Plot("Z1_mass",         ["TH1D","Z1_mass","",]+mZ1PlotRange,        LambdaFunc('x: x.massZ1[0]'),       selFunc=LambdaFunc('x:x.massZ1[0] > 0')      ), 
-    Plot("Lep1_pt",          ["TH1D","Lep1_pt","",40,0.,200.],           LambdaFunc('x:x.Lep1.Pt()'),          selFunc=LambdaFunc('x:x.Lep1.Pt() > 0')        ),
-    Plot("Lep2_pt",          ["TH1D","Lep2_pt","",40,0.,200.],           LambdaFunc('x:x.Lep2.Pt()'),          selFunc=LambdaFunc('x:x.Lep2.Pt() > 0')        ),
-    #Plot("Lep3_pt",          ["TH1D","Lep3_pt","",40,0.,200.],           LambdaFunc('x:x.Lep3.Pt()'),          selFunc=LambdaFunc('x:x.Lep3.Pt() > 0')        ),
-    Plot("Lep3_pt",          ["TH1D","Lep3_pt","",200,0.,200.],           LambdaFunc('x:x.Lep3.Pt()'),          selFunc=LambdaFunc('x:x.Lep3.Pt > 0')        ),
-
-    Plot("Lep3_eta",          ["TH1D","Lep3_eta","",60,-3.,3.],           LambdaFunc('x:x.Lep3.Eta()'),          selFunc=LambdaFunc('x:x.Lep3.Eta()')        ),
-    Plot("3lep_pt",          ["TH1D","3lep_pt","",40,0.,200.],           LambdaFunc('x:x.pT3l[0]'),          selFunc=LambdaFunc('x:x.pT3l[0] > 0')        ),
-    Plot("Lep1+Lep2_pt",     ["TH1D","Lep1+Lep2_pt","",40,0.,200.],      LambdaFunc('x:x.twolpt'),        selFunc=LambdaFunc('x:x.twolpt > 0')      ),
-    Plot("Mass1",          ["TH1D","Mass1","",80,0.,200.],           LambdaFunc('x:x.mass1'),          selFunc=LambdaFunc('x:x.mass1 > 0')        ),
-    Plot("Mass2",          ["TH1D","Mass2","",80,0.,200.],           LambdaFunc('x:x.mass2'),          selFunc=LambdaFunc('x:x.mass2 > 0')        ),
-     Plot("Transverse_Mass",          ["TH1D","Transverse_Mass","",100,0.,500.],           LambdaFunc('x:x.mt'),          selFunc=LambdaFunc('x:x.mt')        ),
-     Plot("Mass1vsMass2",   ["TH2D","Mass1_vs_Mass2","",80,0.,200.,80,0.,200.],   LambdaFunc('x:[x.mass1,x.mass2]'),   dim = 2 ),
-
-
-        #Plot("Z2_mass_vs_DeltaR34_"+eachCR,["TH2D","Z2_mass_vs_DeltaR34_"+eachCR,"",]+mZ2PlotRange+deltaRPlotRange2,LambdaFunc('x: [x.massZ2[0],x.deltaRL34]'),selFunc=LambdaFunc(region_sel_str_whole),dim=2),
-        #Plot("Z2_mass_"+eachCR,         ["TH1D","Z2_mass_"+eachCR,"",]+mZ2PlotRange,        LambdaFunc('x: x.massZ2[0]'),       selFunc=LambdaFunc(region_sel_str_whole)      ),
-        #Plot("Z1_4e_mass_"+eachCR,      ["TH1D","Z1_4e_mass_"+eachCR,"",]+mZ1PlotRange,     LambdaFunc('x: x.massZ1[0]'),       selFunc=LambdaFunc('x: x.mass4e[0] > 0 and '+region_sel_str)          ),
-        #Plot("Z2_4e_mass_"+eachCR,      ["TH1D","Z2_4e_mass_"+eachCR,"",]+mZ2PlotRange,     LambdaFunc('x: x.massZ2[0]'),       selFunc=LambdaFunc('x: x.mass4e[0] > 0 and '+region_sel_str)          ),
-                      
-        Plot("met",             ["TH1D","met","",50,0.,250.],               LambdaFunc('x: x.met[0]'),          selFunc=LambdaFunc('x:x.met[0] > 0'),     ),
-        Plot("met_phi",             ["TH1D","met_phi","",40,-4.,4.],               LambdaFunc('x: x.met_phi[0]'),          selFunc=LambdaFunc('x:x.met_phi[0]'),     ),
-
-        Plot("IsoL3",             ["TH1D","IsoL3","",20,0.,1.],               LambdaFunc('x: x.IsoL3[0]'),          selFunc=LambdaFunc('x:x.IsoL3[0] > 0'),     ),
-        #Plot("PDGIdL3",             ["TH1D","PDGIdL3","",80,-40,40],            LambdaFunc('x: x.PDG_IdL3[0]'),      selFunc=LambdaFunc('x:x.PDG_IdL3[0]'),       ),
-        #Plot("MomIdL1",             ["TH1D","MomIdL1","",80,-40,40],            LambdaFunc('x: x.MomIdL1[0]'),      selFunc=LambdaFunc('x:x.MomIdL1[0]'),       ),
-        #Plot("MomIdL2",             ["TH1D","MomIdL2","",80,-40,40],            LambdaFunc('x: x.MomIdL2[0]'),      selFunc=LambdaFunc('x:x.MomIdL2[0]'),       ),
-        #Plot("MomIdL3",             ["TH1D","MomIdL3","",80,-40,40],            LambdaFunc('x: x.MomIdL3[0]'),      selFunc=LambdaFunc('x:x.MomIdL3[0]'),       ),
-        #Plot("MomMomIdL3",             ["TH1D","MomMomIdL3","",80,-40,40],            LambdaFunc('x: x.MomMomIdL3[0]'),      selFunc=LambdaFunc('x:x.MomMomIdL3[0]'),       ),
-        #Plot("nVtx",            ["TH1D","nVtx","",30,0.0,60.0],             LambdaFunc('x: x.nVtx[0]'),         selFunc=LambdaFunc(region_sel_str_whole),     ),
-        #Plot("MinDeltaRL",      ["TH1D","MinDeltaRL","",]+deltaRPlotRange2,  LambdaFunc('x: x.minDeltaRL'),     selFunc=LambdaFunc(region_sel_str_whole),       ),
+    Plot("Lep1_pt",          ["TH1D","Lep1_pt","",40,0.,200.],           LambdaFunc('x:x.Lep1.Pt()'),	selFunc=LambdaFunc('x:x.Lep1.Pt() > 0')        ),
+    Plot("Lep2_pt",          ["TH1D","Lep2_pt","",40,0.,200.],           LambdaFunc('x:x.Lep2.Pt()'),	selFunc=LambdaFunc('x:x.Lep2.Pt() > 0')        ),
+    Plot("Lep3_pt",          ["TH1D","Lep3_pt","",200,0.,200.],          LambdaFunc('x:x.Lep3.Pt()'),	selFunc=LambdaFunc('x:x.Lep3.Pt > 0')        ),
+
+    Plot("Lep1_eta",         ["TH1D","Lep1_eta","",60,-3.,3.],           LambdaFunc('x:x.Lep1.Eta()'),  selFunc=LambdaFunc('x:x.Lep1.Eta()')        ),
+    Plot("Lep2_eta",         ["TH1D","Lep2_eta","",60,-3.,3.],           LambdaFunc('x:x.Lep2.Eta()'),  selFunc=LambdaFunc('x:x.Lep2.Eta()')        ),
+    Plot("Lep3_eta",         ["TH1D","Lep3_eta","",60,-3.,3.],           LambdaFunc('x:x.Lep3.Eta()'),	selFunc=LambdaFunc('x:x.Lep3.Eta()')        ),
+
+    Plot("Lep1_phi",         ["TH1D","Lep1_phi","",40,-4.,4.],           LambdaFunc('x:x.Lep1.Phi()'),  selFunc=LambdaFunc('x:x.Lep1.Phi()')        ),
+    Plot("Lep2_phi",         ["TH1D","Lep2_phi","",40,-4.,4.],           LambdaFunc('x:x.Lep2.Phi()'),  selFunc=LambdaFunc('x:x.Lep2.Phi()')        ),
+    Plot("Lep3_phi",         ["TH1D","Lep3_phi","",40,-4.,4.],           LambdaFunc('x:x.Lep3.Phi()'),  selFunc=LambdaFunc('x:x.Lep3.Phi()')        ),
+
+    Plot("3lep_pt",          ["TH1D","3lep_pt","",40,0.,200.],           LambdaFunc('x:x.pT3l[0]'),	selFunc=LambdaFunc('x:x.pT3l[0] > 0')        ),
+    Plot("Lep1+Lep2_pt",     ["TH1D","Lep1+Lep2_pt","",40,0.,200.],      LambdaFunc('x:x.twolpt'),	selFunc=LambdaFunc('x:x.twolpt > 0')      ),
+    Plot("Mass1",            ["TH1D","Mass1","",80,0.,200.],             LambdaFunc('x:x.mass1'),       selFunc=LambdaFunc('x:x.mass1 > 0')        ),
+    Plot("Mass2",            ["TH1D","Mass2","",80,0.,200.],             LambdaFunc('x:x.mass2'),       selFunc=LambdaFunc('x:x.mass2 > 0')        ),
+    Plot("Transverse_Mass",  ["TH1D","Transverse_Mass","",100,0.,500.],            LambdaFunc('x:x.mt'),                selFunc=LambdaFunc('x:x.mt')        ),
+    Plot("Mass1vsMass2",     ["TH2D","Mass1_vs_Mass2","",80,0.,200.,80,0.,200.],   LambdaFunc('x:[x.mass1,x.mass2]'),	selFunc=LambdaFunc('x:[x.mass1 > 0,x.mass2 > 0]'),   dim = 2 ),
+
+
+    #Plot("Z2_mass_vs_DeltaR34_"+eachCR,["TH2D","Z2_mass_vs_DeltaR34_"+eachCR,"",]+mZ2PlotRange+deltaRPlotRange2,LambdaFunc('x: [x.massZ2[0],x.deltaRL34]'),selFunc=LambdaFunc(region_sel_str_whole),dim=2),
+    #Plot("Z2_mass_"+eachCR,         ["TH1D","Z2_mass_"+eachCR,"",]+mZ2PlotRange,        LambdaFunc('x: x.massZ2[0]'),       selFunc=LambdaFunc(region_sel_str_whole)      ),
+    #Plot("Z1_4e_mass_"+eachCR,      ["TH1D","Z1_4e_mass_"+eachCR,"",]+mZ1PlotRange,     LambdaFunc('x: x.massZ1[0]'),       selFunc=LambdaFunc('x: x.mass4e[0] > 0 and '+region_sel_str)          ),
+    #Plot("Z2_4e_mass_"+eachCR,      ["TH1D","Z2_4e_mass_"+eachCR,"",]+mZ2PlotRange,     LambdaFunc('x: x.massZ2[0]'),       selFunc=LambdaFunc('x: x.mass4e[0] > 0 and '+region_sel_str)          ),
+                  
+    Plot("met",              ["TH1D","met","",50,0.,250.],               LambdaFunc('x: x.met[0]'),   	selFunc=LambdaFunc('x:x.met[0] > 0 and '+sel_3mu),     ),
+    Plot("met_phi",          ["TH1D","met_phi","",40,-4.,4.],            LambdaFunc('x: x.met_phi[0]'), selFunc=LambdaFunc('x:x.met_phi[0]'),     ),
+
+    Plot("IsoL3",            ["TH1D","IsoL3","",20,0.,1.],               LambdaFunc('x: x.IsoL3[0]'),   selFunc=LambdaFunc('x:x.IsoL3[0] > 0'),     ), 
+    #Plot("PDGIdL3",             ["TH1D","PDGIdL3","",80,-40,40],            LambdaFunc('x: x.PDG_IdL3[0]'),      selFunc=LambdaFunc('x:x.PDG_IdL3[0]'),       ),
+    #Plot("MomIdL1",             ["TH1D","MomIdL1","",80,-40,40],            LambdaFunc('x: x.MomIdL1[0]'),      selFunc=LambdaFunc('x:x.MomIdL1[0]'),       ),
+    #Plot("MomIdL2",             ["TH1D","MomIdL2","",80,-40,40],            LambdaFunc('x: x.MomIdL2[0]'),      selFunc=LambdaFunc('x:x.MomIdL2[0]'),       ),
+    #Plot("MomIdL3",             ["TH1D","MomIdL3","",80,-40,40],            LambdaFunc('x: x.MomIdL3[0]'),      selFunc=LambdaFunc('x:x.MomIdL3[0]'),       ),
+    #Plot("MomMomIdL3",             ["TH1D","MomMomIdL3","",80,-40,40],            LambdaFunc('x: x.MomMomIdL3[0]'),      selFunc=LambdaFunc('x:x.MomMomIdL3[0]'),       ),
+    #Plot("nVtx",            ["TH1D","nVtx","",30,0.0,60.0],             LambdaFunc('x: x.nVtx[0]'),         selFunc=LambdaFunc(region_sel_str_whole),     ),
+    #Plot("MinDeltaRL",      ["TH1D","MinDeltaRL","",]+deltaRPlotRange2,  LambdaFunc('x: x.minDeltaRL'),     selFunc=LambdaFunc(region_sel_str_whole),       ),
         ])
 
 plots =  general_plots
@@ -88,14 +100,20 @@ plots =  general_plots
 #    plot.plotSetting.divideByBinWidth = True
 
 nCores                  = 1
-outputDir               = "/raid/raid7/kshi/Zprime/"+out_path
+#outputDir               = "/raid/raid7/kshi/Zprime/"+out_path
+outputDir               = "results/"
 nEvents                 = -1
 disableProgressBar      = False
 #componentList           = [DYJetsToLL_M50,DYJetsToLL_M10To50,WZTo3LNu,TTJets,Data_Run2016,Data_sr_Run2016,WmTo3munu_ZpM45,WmTo3munu_ZpM15,WpTo3munu_ZpM45,WpTo3munu_ZpM15]#predCR]
-componentList           = [WZTo3LNu,Data_Run2016,WmTo3munu_ZpM45,WmTo3munu_ZpM15,WpTo3munu_ZpM45,WpTo3munu_ZpM15]
+#componentList           = [WZTo3LNu,Data_Run2016,WmTo3munu_ZpM45,WmTo3munu_ZpM15,WpTo3munu_ZpM45,WpTo3munu_ZpM15]
+#componentList           = [WmTo3munu_ZpM15]
 #componentList           = [WZTo3LNu,Data_Run2016,Data_sr_Run2016]
 #componentList           = [DYJetsToLL_M50,DYJetsToLL_M10To50,WZTo3LNu,TTJets,WmTo3munu_ZpM45,WmTo3munu_ZpM15,WpTo3munu_ZpM45,WpTo3munu_ZpM15]
+#componentList		= [DYJetsToLL_M50,WZTo3LNu,TTJets,DYJetsToLL_M10To50,WpTo3munu_ZpM15]
+componentList		= [WZTo3LNu_2017,TTJets_2017,DYJetsToLL_M50_2017,DYJetsToLL_M10To50_2017]
+#componentList		= [WZTo3LNu_2018,TTJets_2018,DYJetsToLL_M50_2018,DYJetsToLL_M10To50_2018]
 #componentList           = [DYJetsToLL_M50,DYJetsToLL_M10To50,WZTo3LNu,TTJets,Data_sr_Run2016]
+#componentList		= [WZTo3LNu_2018]
 #componentList           = [DYJetsToLL_M50_memCR,DYJetsToLL_M10To50_memCR,TTJets_memCR,WZTo3LNu_memCR,Data_memCR_sr_Run2016]
 #componentList           = [Data_memCR_sr_Run2016,Data_memCR_Run2016,WZTo3LNu_memCR]
 #componentList           = [Data_memCR_sr_Run2016]
@@ -109,8 +127,9 @@ justEndSequence         = False
 
 for dataset in componentList:
     if dataset.isMC:
-        #dataset.lumi = 41.4
-        dataset.lumi = 35.9
+        #dataset.lumi = 35.9 #2016
+	dataset.lumi = 41.4 #2017
+	#dataset.lumi = 59.7 #2018
     for component in dataset.componentList:
         component.maxEvents = nEvents
 
@@ -125,5 +144,6 @@ outputInfo.outputDir    = outputDir
 outputInfo.TFileName    = "DataMCDistribution.root"
 
 endSequence = EndSequence(skipHadd=justEndSequence)
-endModuleOutputDir = "/home/kshi/public_html/Zprime/"+out_path
+#endModuleOutputDir = "/home/kshi/public_html/Zprime/"+out_path
+endModuleOutputDir = outputDir+out_path
 endSequence.add(PlotEndModule(endModuleOutputDir,plots))
diff --git a/Wto3l/plot_check_Wto3l_sig_cfg.py b/Wto3l/plot_check_Wto3l_sig_cfg.py
index f075012..c24b36a 100644
--- a/Wto3l/plot_check_Wto3l_sig_cfg.py
+++ b/Wto3l/plot_check_Wto3l_sig_cfg.py
@@ -9,7 +9,7 @@ from Core.Utils.LambdaFunc import LambdaFunc
 
 #from Wto3l.Dataset.Run2016.Wto3l_Data import *
 #from Wto3l.Dataset.Run2016.Wto3l_MC import *
-#from Wto3l.Dataset.Run2016.Wto3l_Data_sr import *
+from Wto3l.Dataset.Run2016.Wto3l_Data_sr import *
 from Wto3l.Dataset.Run2016.Wto3l_MC_sr import *
 #from Wto3l.Dataset.Run2016.Wto3l_memCR_Data import *
 #from Wto3l.Dataset.Run2016.Wto3l_memCR_Data_sr import *
@@ -30,7 +30,7 @@ from Plotter.Plot import Plot
 #out_path = "Wto3l/FakeRate/Run2016/2019-08-13/finalstate_eem/failIso_endcap_TTbar_WOZpeak/"
 #out_path = "Wto3l/DataMCDistributions/Run2016/2019-08-06/FReemWOZpeak_SR_mmm/"
 #out_path = "Wto3l/SR_MCDistributions/Run2016/2019-08-07/check_TT_DY/"
-out_path = "Wto3l/DataMCDistributions/Run2016/masspoint_test/WmM20/"
+#out_path = "Wto3l/DataMCDistributions/Run2016/masspoint_test/WmM20/"
 
 
 mZ1PlotRange = [40,40.,120.]
@@ -52,7 +52,7 @@ general_plots = []
 general_plots.extend([
     Plot("Lep_pt",          ["TH1D","Lep_pt","",40,0.,200.],           LambdaFunc('x:x.lep_pt[0]'),          selFunc=LambdaFunc('x:x.lep_pt[0] > 0')        ),
     Plot("Lep_eta",          ["TH1D","Lep_eta","",60,-3.,3.],           LambdaFunc('x:x.lep_eta[0]'),          selFunc=LambdaFunc('x:x.lep_eta[0]')        ),
-    Plot("Lep_phi",             ["TH1D","Lep_phi","",40,-4.,4.],               LambdaFunc('x: x.lep_phi[0]'),          selFunc=LambdaFunc('x:x.lep_phi[0]')     ),
+    Plot("Lep_phi",             ["TH1D","Lep_phid","",40,-4.,4.],               LambdaFunc('x: x.lep_phi[0]'),          selFunc=LambdaFunc('x:x.lep_phi[0]')     ),
 
 
     #Plot("Z1_mass",         ["TH1D","Z1_mass","",]+mZ1PlotRange,        LambdaFunc('x: x.massZ1[0]'),       selFunc=LambdaFunc('x:x.massZ1[0] > 0')      ), 
@@ -61,16 +61,17 @@ general_plots.extend([
     #Plot("Lep3_pt",          ["TH1D","Lep3_pt","",40,0.,200.],           LambdaFunc('x:x.Lep3.Pt()'),          selFunc=LambdaFunc('x:x.Lep3.Pt() > 0')        ),
     #Plot("Lep3_pt",          ["TH1D","Lep3_pt","",200,0.,200.],           LambdaFunc('x:x.Lep3.Pt()'),          selFunc=LambdaFunc('x:x.Lep3.Pt > 0')        ),
 
+    Plot("Lep1_eta",        ["TH1D","Lep1_eta","",60,-3.,3.],       	LambdaFunc('x:x.Lep1.Eta()'),   	selFunc=LambdaFunc('x:x.Lep1.Eta')	),
     #Plot("Lep3_eta",          ["TH1D","Lep3_eta","",60,-3.,3.],           LambdaFunc('x:x.Lep3.Eta()'),          selFunc=LambdaFunc('x:x.Lep3.Eta()')        ),
     #Plot("3lep_pt",          ["TH1D","3lep_pt","",40,0.,200.],           LambdaFunc('x:x.pT3l[0]'),          selFunc=LambdaFunc('x:x.pT3l[0] > 0')        ),
     #Plot("Lep1+Lep2_pt",     ["TH1D","Lep1+Lep2_pt","",40,0.,200.],      LambdaFunc('x:x.twolpt'),        selFunc=LambdaFunc('x:x.twolpt > 0')      ),
      Plot("Mass1",          ["TH1D","Mass1","",80,0.,200.],           LambdaFunc('x:x.mass1'),          selFunc=LambdaFunc('x:x.mass1 > 0')        ),
      Plot("Mass2",          ["TH1D","Mass2","",80,0.,200.],           LambdaFunc('x:x.mass2'),          selFunc=LambdaFunc('x:x.mass2 > 0')        ),
      Plot("Transverse_Mass",          ["TH1D","Transverse_Mass","",100,0.,500.],           LambdaFunc('x:x.mt'),          selFunc=LambdaFunc('x:x.mt')        ),
-     Plot("Mass1vsMass2",   ["TH2D","Mass1_vs_Mass2","",80,0.,200.,80,0.,200.],   LambdaFunc('x:[x.mass1,x.mass2]'),   dim = 2 ),
+     Plot("Mass1vsMass2",   ["TH2D","Mass1_vs_Mass2","",80,0.,200.,80,0.,200.],   LambdaFunc('x:[x.mass1,x.mass2]'),   selFunc=LambdaFunc('x:x.Lep1.Pt() > 0'), dim = 2 ),
 
 
-        #Plot("Z2_mass_vs_DeltaR34_"+eachCR,["TH2D","Z2_mass_vs_DeltaR34_"+eachCR,"",]+mZ2PlotRange+deltaRPlotRange2,LambdaFunc('x: [x.massZ2[0],x.deltaRL34]'),selFunc=LambdaFunc(region_sel_str_whole),dim=2),
+        #Plot("Z2_mass_vs_DeltaR34_3p1f",["TH2D","Z2_mass_vs_DeltaR34_3p1f","",]+mZ2PlotRange+deltaRPlotRange2,LambdaFunc('x: [x.massZ2[0],x.deltaRL34]'),selFunc=LambdaFunc('x:x.nZXCRFailedLeptons[0] == 1'),dim=2),
         #Plot("Z2_mass_"+eachCR,         ["TH1D","Z2_mass_"+eachCR,"",]+mZ2PlotRange,        LambdaFunc('x: x.massZ2[0]'),       selFunc=LambdaFunc(region_sel_str_whole)      ),
         #Plot("Z1_4e_mass_"+eachCR,      ["TH1D","Z1_4e_mass_"+eachCR,"",]+mZ1PlotRange,     LambdaFunc('x: x.massZ1[0]'),       selFunc=LambdaFunc('x: x.mass4e[0] > 0 and '+region_sel_str)          ),
         #Plot("Z2_4e_mass_"+eachCR,      ["TH1D","Z2_4e_mass_"+eachCR,"",]+mZ2PlotRange,     LambdaFunc('x: x.massZ2[0]'),       selFunc=LambdaFunc('x: x.mass4e[0] > 0 and '+region_sel_str)          ),
@@ -93,7 +94,8 @@ plots =  general_plots
 #    plot.plotSetting.divideByBinWidth = True
 
 nCores                  = 1
-outputDir               = "/raid/raid7/kshi/Zprime/"+out_path
+#outputDir               = "/raid/raid7/kshi/Zprime/"+out_path
+outputDir               = "results/"
 nEvents                 = -1
 disableProgressBar      = False
 #componentList           = [DYJetsToLL_M50,DYJetsToLL_M10To50,WZTo3LNu,TTJets,Data_Run2016,Data_sr_Run2016,WmTo3munu_ZpM45,WmTo3munu_ZpM15,WpTo3munu_ZpM45,WpTo3munu_ZpM15]#predCR]
@@ -130,5 +132,6 @@ outputInfo.outputDir    = outputDir
 outputInfo.TFileName    = "DataMCDistribution.root"
 
 endSequence = EndSequence(skipHadd=justEndSequence)
-endModuleOutputDir = "/home/kshi/public_html/Zprime/"+out_path
+#endModuleOutputDir = "/home/kshi/public_html/Zprime/"+out_path
+endModuleOutputDir = outputDir
 endSequence.add(PlotEndModule(endModuleOutputDir,plots))
diff --git a/Zprime/Config/MergeSampleDict.py b/Zprime/Config/MergeSampleDict.py
deleted file mode 100644
index d95c97c..0000000
--- a/Zprime/Config/MergeSampleDict.py
+++ /dev/null
@@ -1,17 +0,0 @@
-mergeSampleDict = {
-        #"ggH":  ["ggH"],
-        #"VBF":  ["VBF"],
-        #"WH":   ["WHPlus","WHminus",],
-        #"ZH":   ["ZH",],
-        "Higgs":    ["ggH","VBF","WHPlus","WHMinus","ZH","ttH"],
-        "qqZZ": ["qqZZTo4L","qqZZTo4L_M1To4"],
-        "ggZZ": [
-            "ggZZTo2e2mu",
-            "ggZZTo2e2tau",
-            "ggZZTo2mu2tau",
-            "ggZZTo4e",
-            "ggZZTo4mu",
-            "ggZZTo4tau",
-            ],
-        #"ZPlusX": ["ZPlusX"],
-        }
diff --git a/Zprime/Config/MergeSampleDict_1617.py b/Zprime/Config/MergeSampleDict_1617.py
deleted file mode 100644
index ace720a..0000000
--- a/Zprime/Config/MergeSampleDict_1617.py
+++ /dev/null
@@ -1,9 +0,0 @@
-import MergeSampleDict as baseMergeSampleDict
-
-mergeSampleDict = {}
-for mergeSample in baseMergeSampleDict.mergeSampleDict:
-    mergeSampleDict[mergeSample] = []
-    for sample in baseMergeSampleDict.mergeSampleDict[mergeSample]:
-        mergeSampleDict[mergeSample].append(sample+"_Run2016")
-        mergeSampleDict[mergeSample].append(sample+"_Run2017")
-        #mergeSampleDict[mergeSample].append(sample+"_Run2018")
diff --git a/Zprime/Config/MergeSampleDict_161718.py b/Zprime/Config/MergeSampleDict_161718.py
deleted file mode 100644
index ed1ad3d..0000000
--- a/Zprime/Config/MergeSampleDict_161718.py
+++ /dev/null
@@ -1,9 +0,0 @@
-import MergeSampleDict as baseMergeSampleDict
-
-mergeSampleDict = {}
-for mergeSample in baseMergeSampleDict.mergeSampleDict:
-    mergeSampleDict[mergeSample] = []
-    for sample in baseMergeSampleDict.mergeSampleDict[mergeSample]:
-        mergeSampleDict[mergeSample].append(sample+"_Run2016")
-        mergeSampleDict[mergeSample].append(sample+"_Run2017")
-        mergeSampleDict[mergeSample].append(sample+"_Run2018")
diff --git a/Zprime/Config/ZCandPlotDefinition.py b/Zprime/Config/ZCandPlotDefinition.py
deleted file mode 100644
index 08580b6..0000000
--- a/Zprime/Config/ZCandPlotDefinition.py
+++ /dev/null
@@ -1,31 +0,0 @@
-from Plotter.Plot import Plot
-from Core.Utils.LambdaFunc import LambdaFunc
-
-import ROOT
-
-# ________________________________________________________________________ ||
-var_muPt_str        = "[l.pt for l in x.leptons_matched]"
-var_muEta_str       = "[l.eta for l in x.leptons_matched]"
-var_muMass_str      = "(x.leptons_matched[0].p4()+x.leptons_matched[1].p4()).M()"
-
-muPtPlotRange       = [50,0.,50.]
-muEtaPlotRange      = [60,-3.,3.]
-muMassPlotRange     = [90,0.,90.]
-
-# ________________________________________________________________________ ||
-plots = [
-        Plot("mu_pt",["TH1D","mu_pt","",]+muPtPlotRange,LambdaFunc("x: "+var_muPt_str),isCollection=True),
-        Plot("mu_eta",["TH1D","mu_eta","",]+muEtaPlotRange,LambdaFunc("x: "+var_muEta_str),isCollection=True),
-        Plot("mu_mass",["TH1D","mu_mass","",]+muMassPlotRange,LambdaFunc("x: "+var_muMass_str),selFunc=LambdaFunc("x: len(x.leptons_matched) >= 2")),
-        ]
-
-# ________________________________________________________________________ ||
-sampleColorDict     = {
-        5: ROOT.kViolet,
-        10: ROOT.kBlue,
-        20: ROOT.kGreen,
-        30: ROOT.kOrange,
-        40: ROOT.kRed,
-        50: ROOT.kRed+4,
-        60: ROOT.kBlack,
-        }
diff --git a/Zprime/Config/__init__.py b/Zprime/Config/__init__.py
deleted file mode 100644
index e69de29..0000000
diff --git a/Zprime/Dataset/Run1617/SkimTree_Zprime_m4l70.py b/Zprime/Dataset/Run1617/SkimTree_Zprime_m4l70.py
deleted file mode 100644
index 167722b..0000000
--- a/Zprime/Dataset/Run1617/SkimTree_Zprime_m4l70.py
+++ /dev/null
@@ -1,24 +0,0 @@
-import Zprime.Dataset.Run2016.SkimTree_Bkg_m4l70 as sample2016
-#import Zprime.Dataset.Run2016.SkimTree_Zprime_m4l70 as sampleSig2016
-import Zprime.Dataset.Run2017.SkimTree_Bkg_m4l70 as sample2017
-import Zprime.Dataset.Run2017.SkimTree_Zprime_m4l70 as sampleSig2017
-#import Zprime.Dataset.Run2018.SkimTree_DarkPhoton_m4l70 as sample2018
-
-for sample in sample2016.bkgSamples:
-    sample.name += "_Run2016"
-    sample.lumi = 35.9
-for sample in sample2017.bkgSamples:
-    sample.name += "_Run2017"
-    sample.lumi = 41.4
-'''
-for sample in sample2018.bkgSamples:
-    sample.name += "_Run2018"
-    sample.lumi = 59.7
-'''
-bkgSamples = sample2016.bkgSamples + sample2017.bkgSamples# + sample2018.bkgSamples
-
-sigSamples = sampleSig2017.sigSamples
-for sample in sigSamples: sample.lumi = 77.3
-
-#dataSamples = [sample2016.data2016,sample2017.data2017,sample2018.data2018,]
-dataSamples = [sample2016.data2016,sample2017.data2017,]
diff --git a/Zprime/Dataset/Run1617/__init__.py b/Zprime/Dataset/Run1617/__init__.py
deleted file mode 100644
index e69de29..0000000
diff --git a/Zprime/Dataset/Run161718/SkimTree_Zprime_m4l70.py b/Zprime/Dataset/Run161718/SkimTree_Zprime_m4l70.py
deleted file mode 100644
index ce0a367..0000000
--- a/Zprime/Dataset/Run161718/SkimTree_Zprime_m4l70.py
+++ /dev/null
@@ -1,27 +0,0 @@
-import Zprime.Dataset.Run2016.SkimTree_Bkg_m4l70 as sample2016
-#import Zprime.Dataset.Run2016.SkimTree_Zprime_m4l70 as sampleSig2016
-import Zprime.Dataset.Run2017.SkimTree_Bkg_m4l70 as sample2017
-#import Zprime.Dataset.Run2017.SkimTree_Zprime_m4l70 as sampleSig2017
-import Zprime.Dataset.Run2018.SkimTree_Bkg_m4l70 as sample2018
-
-for sample in sample2016.bkgSamples:
-    sample.name += "_Run2016"
-    sample.lumi = 35.9
-for sample in sample2017.bkgSamples:
-    sample.name += "_Run2017"
-    sample.lumi = 41.4
-for sample in sample2018.bkgSamples:
-    sample.name += "_Run2018"
-    sample.lumi = 59.7
-'''
-for sample in sample2018.bkgSamples:
-    sample.name += "_Run2018"
-    sample.lumi = 59.7
-'''
-bkgSamples = sample2016.bkgSamples + sample2017.bkgSamples + sample2018.bkgSamples
-
-#sigSamples = sampleSig2017.sigSamples
-#for sample in sigSamples: sample.lumi = 77.3
-
-#dataSamples = [sample2016.data2016,sample2017.data2017,sample2018.data2018,]
-dataSamples = [sample2016.data2016,sample2017.data2017,sample2018.data2018]
diff --git a/Zprime/Dataset/Run161718/__init__.py b/Zprime/Dataset/Run161718/__init__.py
deleted file mode 100644
index e69de29..0000000
diff --git a/Zprime/Dataset/Run2016/SkimTree_Zprime_m4l70.py b/Zprime/Dataset/Run2016/SkimTree_Zprime_m4l70.py
deleted file mode 100644
index dcf8db6..0000000
--- a/Zprime/Dataset/Run2016/SkimTree_Zprime_m4l70.py
+++ /dev/null
@@ -1,65 +0,0 @@
-from Core.ComponentList import *
-from Core.Dataset import Dataset
-from Utils.System import system
-from Utils.SumWeight import handleSumWeight
-import os
-
-bkgSkimTreeDir      = system.getStoragePath()+"/"+os.environ['USER']+"/Higgs/Zprime-NTuple/20200415/SkimTree_Zprime_Run2017Data_m4l70/"
-bkgSkimTreeDir2     = bkgSkimTreeDir
-bkgTreeDir          = "/cms/data/store/user/t2/users/klo/Zprime/EXO-18-008/HZZNTuple_Run2016/"
-dataTreeDir         = bkgSkimTreeDir
-inUFTier2           = False
-sumWeightHist       = "Ana/sumWeights"
-saveSumWeightTxt    = False
-
-# ____________________________________________________________________________________________________________________________________________ ||
-# zpToMuMu
-sigSampleDict = {}
-zp_mass_points = [
-        #1,
-        5,
-        10,
-        15,
-        ] + range(20,80,10)
-
-zpToMuMuXS_dict = {
-        5: 0.5555,
-        10: 0.2173,
-        15: 0.1141,
-        20: 0.0650,
-        25: 0.0382,
-        30: 0.0226,
-        35: 0.0134,
-        40: 0.0079,
-        45: 0.0045,
-        50: 0.0025,
-        55: 0.0014,
-        60: 0.0007,
-        65: 0.0004,
-        70: 0.0002,
-        }
-
-# ____________________________________________________________________________________________________________________________________________ ||
-for m in zp_mass_points:
-    sigSampleDict[m] = Dataset(
-        "zpToMuMu_M"+str(m),
-        ComponentList([ 
-            Component("zpToMuMu_M"+str(m),bkgSkimTreeDir+"ZpTomumu_M"+str(m)+"_13TeV_MadGraph5_pythia8-v4_muahmad-RunIISummer16MiniAODv2.root","passedEvents",inUFTier2=inUFTier2),
-        ],
-        ),
-        isMC                = True,
-        xs                  = zpToMuMuXS_dict[m],
-        isSignal            = True,
-        )
-    handleSumWeight(
-        sigSampleDict[m],
-        system,
-        bkgTreeDir+"ZpTomumu_M"+str(m)+"_13TeV_MadGraph5_pythia8-v4_muahmad-RunIISummer16MiniAODv2.root",
-        sumWeightHist,
-        True,
-        saveSumWeightTxt,
-        bkgSkimTreeDir+"ZpTomumu_M"+str(m)+"_13TeV_MadGraph5_pythia8-v4_muahmad-RunIISummer16MiniAODv2.txt",
-        bkgSkimTreeDir+"ZpTomumu_M"+str(m)+"_13TeV_MadGraph5_pythia8-v4_muahmad-RunIISummer16MiniAODv2.txt",
-        )
-
-# ____________________________________________________________________________________________________________________________________________ ||
diff --git a/Zprime/Dataset/Run2016/__init__.py b/Zprime/Dataset/Run2016/__init__.py
deleted file mode 100644
index e69de29..0000000
diff --git a/Zprime/Dataset/Run2017/SkimTree_Fakerate_Bkg_m4l70.py b/Zprime/Dataset/Run2017/SkimTree_Fakerate_Bkg_m4l70.py
deleted file mode 100644
index 019f545..0000000
--- a/Zprime/Dataset/Run2017/SkimTree_Fakerate_Bkg_m4l70.py
+++ /dev/null
@@ -1,139 +0,0 @@
-from Core.ComponentList import *
-from Core.Dataset import Dataset
-from Utils.System import system
-from Utils.SumWeight import handleSumWeight
-
-#bkgSkimTreeDir2      = system.getStoragePath()+"/lucien/Higgs/Zprime-NTuple/20190605/SkimTree_Zprime_Run2017Data_m4l70/"
-bkgSkimTreeDir      = system.getStoragePath()+"/kshi/Zprime/20200212_Zto4l/fakerate/SkimTree_Run2017_MMM_MC/"
-#bkgSkimTreeDir2     = bkgSkimTreeDir
-bkgTreeDir          = "/cms/data/store/user/t2/users/klo/Higgs/DarkZ/NTuples/ZPlusX_Early2017_v1/"
-#dataTreeDir         = bkgSkimTreeDir
-#dataTreeDir         = system.getStoragePath()+"/kshi/Zprime/20200212_Zto4l/SkimTree_Run2017_MMM_Data/"
-dataTreeDir         = system.getStoragePath()+"/kshi/Zprime/20200212_Zto4l/fakerate/SkimTree_Run2017_MMM_Data/"
-inUFTier2           = False
-sumWeightHist       = "Ana/sumWeights"
-saveSumWeightTxt    = True
-
-# ____________________________________________________________________________________________________________________________________________ ||
-# Data2017
-data2017_cmpList = ComponentList(
-        [ 
-            Component("Data2017",dataTreeDir+"Data_Run2017_DoubleMuon-SingleMuon_noDuplicates.root","passedEvents",inUFTier2=inUFTier2),        
-        ]
-        )
-
-data2017 = Dataset(
-        "Data2017",
-        data2017_cmpList,
-        isMC                = False,
-        )
-
-# _________________________________________________________________________________________________________________ ||
-DYJetsToLL_M50_cmpList = ComponentList(
-        [
-            Component("DYJetsToLL_M50",bkgSkimTreeDir+"DYJetsToLL_M50.root","passedEvents",inUFTier2=inUFTier2),
-        ]
-        )
-DYJetsToLL_M50 = Dataset(
-        "DYJetsToLL_M50",
-        DYJetsToLL_M50_cmpList,
-        isMC = True,
-        xs = 6104, 
-        )
-handleSumWeight(
-        DYJetsToLL_M50,
-        system,
-        bkgTreeDir+"DYJetsToLL_M50.root",
-        #bkgTreeDir+"DYJetsToLL_M-50_TuneCUETP8M1_13TeV-amcatnloFXFX-pythia8.root",
-        sumWeightHist,
-        True,
-        saveSumWeightTxt,
-        bkgSkimTreeDir+"DYJetsToLL_M50.txt",
-        bkgSkimTreeDir+"DYJetsToLL_M50.txt",
-        )
-
-# ____________________________________________________________________________________________________________________________________________ ||
-DYJetsToLL_M10To50_cmpList = ComponentList(
-        [
-            Component("DYJetsToLL_M10To50",bkgSkimTreeDir+"DYJetsToLL_M10To50.root","passedEvents",inUFTier2=inUFTier2),
-        ]
-        )
-DYJetsToLL_M10To50 = Dataset(
-        "DYJetsToLL_M10To50",
-        DYJetsToLL_M10To50_cmpList,
-        isMC = True,
-        xs = 6104, 
-        )
-handleSumWeight(
-        DYJetsToLL_M10To50,
-        system,
-        bkgTreeDir+"DYJetsToLL_M10To50.root",
-        #bkgTreeDir+"DYJetsToLL_M-10to50_TuneCUETP8M1_13TeV-amcatnloFXFX-pythia8.root",
-        sumWeightHist,
-        True,
-        saveSumWeightTxt,
-        bkgSkimTreeDir+"DYJetsToLL_M10To50.txt",
-        bkgSkimTreeDir+"DYJetsToLL_M10To50.txt",
-        )
-
-# ____________________________________________________________________________________________________________________________________________ ||
-TTJets_cmpList = ComponentList(
-        [
-            Component("TTJets",bkgSkimTreeDir+"TTJets.root","passedEvents",inUFTier2=inUFTier2),
-        ]
-        )
-TTJets = Dataset(
-        "TTJets",
-        TTJets_cmpList,
-        isMC = True,
-        xs = 87.31, 
-        )
-handleSumWeight(
-        TTJets,
-        system,
-        bkgTreeDir+"TTJets.root",
-        #bkgTreeDir+"TTJets_Dilept_TuneCUETP8M2T4_13TeV-amcatnloFXFX-pythia8.root",
-        sumWeightHist,
-        True,
-        saveSumWeightTxt,
-        bkgSkimTreeDir+"TTJets.txt",
-        bkgSkimTreeDir+"TTJets.txt",
-        )
-
-# ____________________________________________________________________________________________________________________________________________ ||
-WZTo3LNu_cmpList = ComponentList(
-        [
-            Component("WZTo3LNu",bkgSkimTreeDir+"WZTo3LNu.root","passedEvents",inUFTier2=inUFTier2),
-        ]
-        )
-WZTo3LNu = Dataset(
-        "WZTo3LNu",
-        WZTo3LNu_cmpList,
-        isMC = True,
-        xs = 0.04430, 
-        )
-handleSumWeight(
-        WZTo3LNu,
-        system,
-        bkgTreeDir+"WZTo3LNu.root",
-        #bkgTreeDir+"WZTo3LNu_TuneCUETP8M1_13TeV-amcatnloFXFX-pythia8.root",
-        sumWeightHist,
-        True,
-        saveSumWeightTxt,
-        bkgSkimTreeDir+"WZTo3LNu.txt",
-        bkgSkimTreeDir+"WZTo3LNu.txt",
-        )
-
-# ____________________________________________________________________________________________________________________________________________ ||
-bkgSamples = [
-        DYJetsToLL_M50,
-        DYJetsToLL_M10To50,
-        TTJets,
-        WZTo3LNu,
-        ]
-dataSamples = [
-        data2017,
-        ]
-frdataSamples = [
-        data2017,
-        ]
diff --git a/Zprime/Dataset/Run2017/SkimTree_Zprime_m4l70.py b/Zprime/Dataset/Run2017/SkimTree_Zprime_m4l70.py
deleted file mode 100644
index 93eabd2..0000000
--- a/Zprime/Dataset/Run2017/SkimTree_Zprime_m4l70.py
+++ /dev/null
@@ -1,68 +0,0 @@
-from Core.ComponentList import *
-from Core.Dataset import Dataset
-from Utils.System import system
-from Utils.SumWeight import handleSumWeight
-
-#bkgSkimTreeDir      = system.getStoragePath()+"/lucien/Higgs/Zprime-NTuple/20190605/SkimTree_Zprime_Run2017Data_m4l70/"
-#bkgSkimTreeDir      = system.getStoragePath()+"/kshi/Zprime/20200212_Zto4l/SkimTree_Run2017_MMM_MC/"
-bkgSkimTreeDir      = system.getStoragePath()+"/kshi/Zprime/20200212_Zto4l/mllLowGev/SkimTree_Run2017_MMM_MC/"
-bkgSkimTreeDir2     = bkgSkimTreeDir
-bkgTreeDir          = "/cmsuf/data/store/user/muahmad/rootfiles_2017/"
-dataTreeDir         = bkgSkimTreeDir
-inUFTier2           = False
-sumWeightHist       = "Ana/sumWeights"
-saveSumWeightTxt    = False
-
-# ____________________________________________________________________________________________________________________________________________ ||
-# zpToMuMu
-sigSampleDict = {}
-zp_mass_points = [
-        #1,
-        5,
-        10,
-        15,
-        ] + range(20,80,10)
-
-zpToMuMuXS_dict = {
-        5: 0.5555,
-        10: 0.2173,
-        15: 0.1141,
-        20: 0.0650,
-        25: 0.0382,
-        30: 0.0226,
-        35: 0.0134,
-        40: 0.0079,
-        45: 0.0045,
-        50: 0.0025,
-        55: 0.0014,
-        60: 0.0007,
-        65: 0.0004,
-        70: 0.0002,
-        }
-
-# ____________________________________________________________________________________________________________________________________________ ||
-for m in zp_mass_points:
-    sigSampleDict[m] = Dataset(
-        "zpToMuMu_M"+str(m),
-        ComponentList([ 
-            Component("zpToMuMu_M"+str(m),bkgSkimTreeDir+"ZpTomumu_M"+str(m)+"_13TeV_MadGraph5_pythia8-v4_muahmad-RunIISummer16MiniAODv2.root","passedEvents",inUFTier2=inUFTier2),
-        ],
-        ),
-        isMC                = True,
-        xs                  = zpToMuMuXS_dict[m],
-        isSignal            = True,
-        )
-    handleSumWeight(
-        sigSampleDict[m],
-        system,
-        bkgTreeDir+"ZpTomumu_M"+str(m)+"_13TeV_MadGraph5_pythia8-v4_muahmad-RunIISummer16MiniAODv2.root",
-        sumWeightHist,
-        True,
-        saveSumWeightTxt,
-        bkgSkimTreeDir+"ZpTomumu_M"+str(m)+"_13TeV_MadGraph5_pythia8-v4_muahmad-RunIISummer16MiniAODv2.txt",
-        #bkgSkimTreeDir+"ZpTomumu_M"+str(m)+"_13TeV_MadGraph5_pythia8-v4_muahmad-RunIISummer16MiniAODv2.txt",
-        )
-
-# ____________________________________________________________________________________________________________________________________________ ||
-
-sigSamples = sigSampleDict.values()
diff --git a/Zprime/Dataset/Run2017/SkimTree_promptCR_Bkg_m4l70.py b/Zprime/Dataset/Run2017/SkimTree_promptCR_Bkg_m4l70.py
deleted file mode 100644
index 4bffed9..0000000
--- a/Zprime/Dataset/Run2017/SkimTree_promptCR_Bkg_m4l70.py
+++ /dev/null
@@ -1,147 +0,0 @@
-from Core.ComponentList import *
-from Core.Dataset import Dataset
-from Utils.System import system
-from Utils.SumWeight import handleSumWeight
-
-#bkgSkimTreeDir2      = system.getStoragePath()+"/lucien/Higgs/Zprime-NTuple/20190605/SkimTree_Zprime_Run2017Data_m4l70/"
-bkgSkimTreeDir      = system.getStoragePath()+"/kshi/Zprime/20200212_Zto4l/promptCR/SkimTree_Run2017_MMM_MC/"
-#bkgSkimTreeDir2     = bkgSkimTreeDir
-bkgTreeDir          = "/cms/data/store/user/t2/users/klo/Higgs/DarkZ/NTuples/ZPlusX_Early2017_v1/"
-#dataTreeDir         = bkgSkimTreeDir
-#dataTreeDir         = system.getStoragePath()+"/kshi/Zprime/20200212_Zto4l/SkimTree_Run2017_MMM_Data/"
-dataTreeDir         = system.getStoragePath()+"/kshi/Zprime/20200212_Zto4l/promptCR/SkimTree_Run2017_MMM_Data/"
-inUFTier2           = False
-sumWeightHist       = "Ana/sumWeights"
-saveSumWeightTxt    = True
-
-# ____________________________________________________________________________________________________________________________________________ ||
-# Data2017
-data2017_cmpList = ComponentList(
-        [ 
-            Component("Data2017",dataTreeDir+"Data_Run2017_DoubleMuon-SingleMuon_noDuplicates.root","passedEvents",inUFTier2=inUFTier2),        
-        ]
-        )
-
-data2017 = Dataset(
-        "Data2017",
-        data2017_cmpList,
-        isMC                = False,
-        )
-
-# _________________________________________________________________________________________________________________ ||
-ZPlusX_cmpList = ComponentList(
-        [
-            Component("ZPlusX",dataTreeDir+"Data_Run2017-17Nov2017_noDuplicates_FRWeightFromVukasinWZRemoved.root","passedEvents",inUFTier2=inUFTier2),
-        ]
-        )
-
-ZPlusX = Dataset(
-        "ZPlusX",
-        ZPlusX_cmpList,
-        isMC                = True,
-        skipWeight          = True,
-        )
-
-# _________________________________________________________________________________________________________________ ||
-DYJetsToLL_M50_cmpList = ComponentList(
-        [
-            Component("DYJetsToLL_M50",bkgSkimTreeDir+"DYJetsToLL_M50.root","passedEvents",inUFTier2=inUFTier2),
-        ]
-        )
-DYJetsToLL_M50 = Dataset(
-        "DYJetsToLL_M50",
-        DYJetsToLL_M50_cmpList,
-        isMC = True,
-        xs = 6104, 
-        )
-handleSumWeight(
-        DYJetsToLL_M50,
-        system,
-        bkgTreeDir+"DYJetsToLL_M50.root",
-        #bkgTreeDir+"DYJetsToLL_M-50_TuneCUETP8M1_13TeV-amcatnloFXFX-pythia8.root",
-        sumWeightHist,
-        True,
-        saveSumWeightTxt,
-        bkgSkimTreeDir+"DYJetsToLL_M50.txt",
-        )
-
-# ____________________________________________________________________________________________________________________________________________ ||
-DYJetsToLL_M10To50_cmpList = ComponentList(
-        [
-            Component("DYJetsToLL_M10To50",bkgSkimTreeDir+"DYJetsToLL_M10To50.root","passedEvents",inUFTier2=inUFTier2),
-        ]
-        )
-DYJetsToLL_M10To50 = Dataset(
-        "DYJetsToLL_M10To50",
-        DYJetsToLL_M10To50_cmpList,
-        isMC = True,
-        xs = 6104, 
-        )
-handleSumWeight(
-        DYJetsToLL_M10To50,
-        system,
-        bkgTreeDir+"DYJetsToLL_M10To50.root",
-        #bkgTreeDir+"DYJetsToLL_M-10to50_TuneCUETP8M1_13TeV-amcatnloFXFX-pythia8.root",
-        sumWeightHist,
-        True,
-        saveSumWeightTxt,
-        bkgSkimTreeDir+"DYJetsToLL_M10To50.txt",
-        )
-
-# ____________________________________________________________________________________________________________________________________________ ||
-TTJets_cmpList = ComponentList(
-        [
-            Component("TTJets",bkgSkimTreeDir+"TTJets.root","passedEvents",inUFTier2=inUFTier2),
-        ]
-        )
-TTJets = Dataset(
-        "TTJets",
-        TTJets_cmpList,
-        isMC = True,
-        xs = 87.31, 
-        )
-handleSumWeight(
-        TTJets,
-        system,
-        bkgTreeDir+"TTJets.root",
-        #bkgTreeDir+"TTJets_Dilept_TuneCUETP8M2T4_13TeV-amcatnloFXFX-pythia8.root",
-        sumWeightHist,
-        True,
-        saveSumWeightTxt,
-        bkgSkimTreeDir+"TTJets.txt",
-        )
-
-# ____________________________________________________________________________________________________________________________________________ ||
-WZTo3LNu_cmpList = ComponentList(
-        [
-            Component("WZTo3LNu",bkgSkimTreeDir+"WZTo3LNu.root","passedEvents",inUFTier2=inUFTier2),
-        ]
-        )
-WZTo3LNu = Dataset(
-        "WZTo3LNu",
-        WZTo3LNu_cmpList,
-        isMC = True,
-        xs = 0.04430, 
-        )
-handleSumWeight(
-        WZTo3LNu,
-        system,
-        bkgTreeDir+"WZTo3LNu.root",
-        #bkgTreeDir+"WZTo3LNu_TuneCUETP8M1_13TeV-amcatnloFXFX-pythia8.root",
-        sumWeightHist,
-        True,
-        saveSumWeightTxt,
-        bkgSkimTreeDir+"WZTo3LNu.txt",
-        )
-
-# ____________________________________________________________________________________________________________________________________________ ||
-bkgSamples = [
-        DYJetsToLL_M50,
-        DYJetsToLL_M10To50,
-        TTJets,
-        WZTo3LNu,
-        ZPlusX,
-        ]
-dataSamples = [
-        #data2017,
-        ]
diff --git a/Zprime/Dataset/Run2017/Wto3l_MC.py b/Zprime/Dataset/Run2017/Wto3l_MC.py
deleted file mode 100644
index d9f67aa..0000000
--- a/Zprime/Dataset/Run2017/Wto3l_MC.py
+++ /dev/null
@@ -1,107 +0,0 @@
-from Core.ComponentList import *
-from Core.Dataset import Dataset
-from Utils.System import system
-from Utils.SumWeight import handleSumWeight
-
-bkgTreeDirT2_Feb21      = "/cms/data/store/user/t2/users/klo/Higgs/HZZ4l/NTuple/Run2/MC80X_M17_2l_Feb21/"
-bkgTreeDirT2_Aug10      = "/cms/data/store/user/t2/users/klo/Higgs/HZZ4l/NTuple/Run2/MC80X_M17_2lskim_Aug10/"
-#bkgTreeDir      = "/raid/raid7/kshi/Zprime/20190718/SkimTree_Run2016_MC/"
-bkgTreeDir      = "/raid/raid7/kshi/Zprime/20190827/SkimTree_Run2016_MMM_MC/"
-inUFTier2       = False
-saveSumWeightTxt= False
-sumWeightHist   = "Ana/sumWeights"
-
-# ____________________________________________________________________________________________________________________________________________ ||
-DYJetsToLL_M50_cmpList = ComponentList(
-        [
-            Component("DYJetsToLL_M50",bkgTreeDir+"DYJetsToLL_M-50_TuneCUETP8M1_13TeV-amcatnloFXFX-pythia8.root","passedEvents",inUFTier2=inUFTier2),
-        ]
-        )
-DYJetsToLL_M50 = Dataset(
-        "DYJetsToLL_M50",
-        DYJetsToLL_M50_cmpList,
-        isMC = True,
-        xs = 6104, 
-        )
-handleSumWeight(
-        DYJetsToLL_M50,
-        system,
-        bkgTreeDirT2_Feb21+"DYJetsToLL_M-50_TuneCUETP8M1_13TeV-amcatnloFXFX-pythia8.root",
-        #bkgTreeDir+"DYJetsToLL_M-50_TuneCUETP8M1_13TeV-amcatnloFXFX-pythia8.root",
-        sumWeightHist,
-        True,
-        saveSumWeightTxt,
-        bkgTreeDir+"DYJetsToLL_M-50_TuneCUETP8M1_13TeV-amcatnloFXFX-pythia8.txt",
-        )
-
-# ____________________________________________________________________________________________________________________________________________ ||
-DYJetsToLL_M10To50_cmpList = ComponentList(
-        [
-            Component("DYJetsToLL_M10To50",bkgTreeDir+"DYJetsToLL_M-10to50_TuneCUETP8M1_13TeV-amcatnloFXFX-pythia8.root","passedEvents",inUFTier2=inUFTier2),
-        ]
-        )
-DYJetsToLL_M10To50 = Dataset(
-        "DYJetsToLL_M10To50",
-        DYJetsToLL_M10To50_cmpList,
-        isMC = True,
-        xs = 6104, 
-        )
-handleSumWeight(
-        DYJetsToLL_M10To50,
-        system,
-        bkgTreeDirT2_Aug10+"DYJetsToLL_M-10to50_TuneCUETP8M1_13TeV-amcatnloFXFX-pythia8.root",
-        #bkgTreeDir+"DYJetsToLL_M-10to50_TuneCUETP8M1_13TeV-amcatnloFXFX-pythia8.root",
-        sumWeightHist,
-        True,
-        saveSumWeightTxt,
-        bkgTreeDir+"DYJetsToLL_M-10to50_TuneCUETP8M1_13TeV-amcatnloFXFX-pythia8.txt",
-        )
-
-# ____________________________________________________________________________________________________________________________________________ ||
-TTJets_cmpList = ComponentList(
-        [
-            Component("TTJets",bkgTreeDir+"TTJets_Dilept_TuneCUETP8M2T4_13TeV-amcatnloFXFX-pythia8.root","passedEvents",inUFTier2=inUFTier2),
-        ]
-        )
-TTJets = Dataset(
-        "TTJets",
-        TTJets_cmpList,
-        isMC = True,
-        xs = 87.31, 
-        )
-handleSumWeight(
-        TTJets,
-        system,
-        bkgTreeDirT2_Feb21+"TTJets_Dilept_TuneCUETP8M2T4_13TeV-amcatnloFXFX-pythia8.root",
-        #bkgTreeDir+"TTJets_Dilept_TuneCUETP8M2T4_13TeV-amcatnloFXFX-pythia8.root",
-        sumWeightHist,
-        True,
-        saveSumWeightTxt,
-        bkgTreeDir+"TTJets_Dilept_TuneCUETP8M2T4_13TeV-amcatnloFXFX-pythia8.txt",
-        )
-
-# ____________________________________________________________________________________________________________________________________________ ||
-WZTo3LNu_cmpList = ComponentList(
-        [
-            Component("WZTo3LNu",bkgTreeDir+"WZTo3LNu_TuneCUETP8M1_13TeV-amcatnloFXFX-pythia8.root","passedEvents",inUFTier2=inUFTier2),
-        ]
-        )
-WZTo3LNu = Dataset(
-        "WZTo3LNu",
-        WZTo3LNu_cmpList,
-        isMC = True,
-        xs = 0.04430, 
-        )
-handleSumWeight(
-        WZTo3LNu,
-        system,
-        bkgTreeDirT2_Feb21+"WZTo3LNu_TuneCUETP8M1_13TeV-amcatnloFXFX-pythia8.root",
-        #bkgTreeDir+"WZTo3LNu_TuneCUETP8M1_13TeV-amcatnloFXFX-pythia8.root",
-        sumWeightHist,
-        True,
-        saveSumWeightTxt,
-        bkgTreeDir+"WZTo3LNu_TuneCUETP8M1_13TeV-amcatnloFXFX-pythia8.txt",
-        )
-
-bkgSamples = [WZTo3LNu,]
-
diff --git a/Zprime/Dataset/Run2017/__init__.py b/Zprime/Dataset/Run2017/__init__.py
deleted file mode 100644
index e69de29..0000000
diff --git a/Zprime/Dataset/Run2018/SkimTree_Bkg_m4l70.py b/Zprime/Dataset/Run2018/SkimTree_Bkg_m4l70.py
deleted file mode 100644
index 5f45318..0000000
--- a/Zprime/Dataset/Run2018/SkimTree_Bkg_m4l70.py
+++ /dev/null
@@ -1,381 +0,0 @@
-from Core.ComponentList import *
-from Core.Dataset import Dataset
-from Utils.System import system
-from Utils.SumWeight import handleSumWeight
-
-#bkgSkimTreeDir2      = system.getStoragePath()+"/lucien/Higgs/Zprime-NTuple/20190605/SkimTree_Zprime_Run2017Data_m4l70/"
-#bkgSkimTreeDir      = system.getStoragePath()+"/kshi/Zprime/20200212_Zto4l/SkimTree_Run2017_MMM_MC/"
-#bkgSkimTreeDir      = system.getStoragePath()+"/kshi/Zprime/20200212_Zto4l/mllLowGev/SkimTree_Run2018_MMM_MC/"
-bkgSkimTreeDir      = system.getStoragePath()+"/kshi/Zprime/20200212_Zto4l/mllLowGev/SkimTree_Run2018_MMM_MC/"
-#bkgSkimTreeDir2     = bkgSkimTreeDir
-bkgTreeDir          = "/cms/data/store/user/t2/users/rosedj1/Higgs/HZZ4l/NTuple/Run2/MC2018_M19_Mar12_4l_2018Jets_JER_bestCandLegacy/"
-#dataTreeDir         = bkgSkimTreeDir
-#dataTreeDir         = system.getStoragePath()+"/kshi/Zprime/20200212_Zto4l/SkimTree_Run2017_MMM_Data/"
-#dataTreeDir         = system.getStoragePath()+"/kshi/Zprime/20200212_Zto4l/mllLowGev/SkimTree_Run2018_MMM_Data/"
-dataTreeDir         = system.getStoragePath()+"/kshi/Zprime/20200212_Zto4l/mllLowGev/SkimTree_Run2018_MMM_Data/"
-inUFTier2           = False
-sumWeightHist       = "Ana/sumWeights"
-saveSumWeightTxt    = True
-
-# ____________________________________________________________________________________________________________________________________________ ||
-# Data2018
-data2018_cmpList = ComponentList(
-        [ 
-            Component("Data2018",dataTreeDir+"Data_Run2018_noDuplicates.root","passedEvents",inUFTier2=inUFTier2),
-            #Component("Data2018",dataTreeDir+"Data_Run2018.root","passedEvents",inUFTier2=inUFTier2),
-            
-        ]
-        )
-
-data2018 = Dataset(
-        "Data2018",
-        data2018_cmpList,
-        isMC                = False,
-        )
-
-# ____________________________________________________________________________________________________________________________________________ ||
-# qqZZ
-qqZZ_cmpList = ComponentList(
-        [ 
-            Component("qqZZTo4L",bkgSkimTreeDir+"ZZTo4L_TuneCP5_13TeV_powheg_pythia8.root","passedEvents",inUFTier2=inUFTier2),
-        ]
-        )
-
-qqZZTo4L = Dataset(
-        "qqZZTo4L",
-        qqZZ_cmpList,
-        isMC                = True,
-        xs                  = 1.256,
-        )
-handleSumWeight(
-        qqZZTo4L,
-        system,
-        bkgTreeDir+"ZZTo4L_TuneCP5_13TeV_powheg_pythia8.root",
-        sumWeightHist,
-        True,
-        saveSumWeightTxt,
-        bkgSkimTreeDir+"ZZTo4L_TuneCP5_13TeV_powheg_pythia8.txt",
-        bkgSkimTreeDir+"ZZTo4L_TuneCP5_13TeV_powheg_pythia8.txt",
-        )
-
-# ____________________________________________________________________________________________________________________________________________ ||
-# ggZZTo4tau
-ggZZTo4L_cmpList = ComponentList(
-        [ 
-            Component("ggZZTo4tau",bkgSkimTreeDir+"GluGluToContinToZZTo4tau_13TeV_MCFM701_pythia8.root","passedEvents",inUFTier2=inUFTier2),
-        ]
-        )
-
-ggZZTo4tau = Dataset(
-        "ggZZTo4tau",
-        ggZZTo4L_cmpList,
-        isMC                = True,
-        xs                  = 0.001586,
-        )
-handleSumWeight(
-        ggZZTo4tau,
-        system,
-        bkgTreeDir+"GluGluToContinToZZTo4tau_13TeV_MCFM701_pythia8.root",
-        sumWeightHist,
-        True,
-        saveSumWeightTxt,
-        bkgSkimTreeDir+"GluGluToContinToZZTo4tau_13TeV_MCFM701_pythia8.txt",
-        bkgSkimTreeDir+"GluGluToContinToZZTo4tau_13TeV_MCFM701_pythia8.txt",
-        )
-
-# ____________________________________________________________________________________________________________________________________________ ||
-# ggZZTo4e
-ggZZTo4L_cmpList = ComponentList(
-        [ 
-            Component("ggZZTo4e",bkgSkimTreeDir+"GluGluToContinToZZTo4e_13TeV_MCFM701_pythia8.root","passedEvents",inUFTier2=inUFTier2),
-        ]
-        )
-
-ggZZTo4e = Dataset(
-        "ggZZTo4e",
-        ggZZTo4L_cmpList,
-        isMC                = True,
-        xs                  = 0.001586,
-        )
-handleSumWeight(
-        ggZZTo4e,
-        system,
-        bkgTreeDir+"GluGluToContinToZZTo4e_13TeV_MCFM701_pythia8.root",
-        sumWeightHist,
-        True,
-        saveSumWeightTxt,
-        bkgSkimTreeDir+"GluGluToContinToZZTo4e_13TeV_MCFM701_pythia8.txt",
-        bkgSkimTreeDir+"GluGluToContinToZZTo4e_13TeV_MCFM701_pythia8.txt",
-        )
-
-# ____________________________________________________________________________________________________________________________________________ ||
-# ggZZTo4mu
-ggZZTo4L_cmpList = ComponentList(
-        [ 
-            Component("ggZZTo4mu",bkgSkimTreeDir+"GluGluToContinToZZTo4mu_13TeV_MCFM701_pythia8.root","passedEvents",inUFTier2=inUFTier2),
-        ]
-        )
-
-ggZZTo4mu = Dataset(
-        "ggZZTo4mu",
-        ggZZTo4L_cmpList,
-        isMC                = True,
-        xs                  = 0.001586,
-        )
-handleSumWeight(
-        ggZZTo4mu,
-        system,
-        bkgTreeDir+"GluGluToContinToZZTo4mu_13TeV_MCFM701_pythia8.root",
-        sumWeightHist,
-        True,
-        saveSumWeightTxt,
-        bkgSkimTreeDir+"GluGluToContinToZZTo4mu_13TeV_MCFM701_pythia8.txt",
-        bkgSkimTreeDir+"GluGluToContinToZZTo4mu_13TeV_MCFM701_pythia8.txt",
-        )
-
-# ____________________________________________________________________________________________________________________________________________ ||
-# ggZZTo2mu2tau
-ggZZTo4L_cmpList = ComponentList(
-        [ 
-            Component("ggZZTo2mu2tau",bkgSkimTreeDir+"GluGluToContinToZZTo2mu2tau_13TeV_MCFM701_pythia8.root","passedEvents",inUFTier2=inUFTier2),
-        ]
-        )
-
-ggZZTo2mu2tau = Dataset(
-        "ggZZTo2mu2tau",
-        ggZZTo4L_cmpList,
-        isMC                = True,
-        xs                  = 0.00319,
-        )
-handleSumWeight(
-        ggZZTo2mu2tau,
-        system,
-        bkgTreeDir+"GluGluToContinToZZTo2mu2tau_13TeV_MCFM701_pythia8.root",
-        sumWeightHist,
-        True,
-        saveSumWeightTxt,
-        bkgSkimTreeDir+"GluGluToContinToZZTo2mu2tau_13TeV_MCFM701_pythia8.txt",
-        bkgSkimTreeDir+"GluGluToContinToZZTo2mu2tau_13TeV_MCFM701_pythia8.txt",
-        )
-
-# ____________________________________________________________________________________________________________________________________________ ||
-# ggZZTo2e2mu
-ggZZTo4L_cmpList = ComponentList(
-        [ 
-            Component("ggZZTo2e2mu",bkgSkimTreeDir+"GluGluToContinToZZTo2e2mu_13TeV_MCFM701_pythia8.root","passedEvents",inUFTier2=inUFTier2),
-        ]
-        )
-
-ggZZTo2e2mu = Dataset(
-        "ggZZTo2e2mu",
-        ggZZTo4L_cmpList,
-        isMC                = True,
-        xs                  = 0.00319,
-        )
-handleSumWeight(
-        ggZZTo2e2mu,
-        system,
-        bkgTreeDir+"GluGluToContinToZZTo2e2mu_13TeV_MCFM701_pythia8.root",
-        sumWeightHist,
-        True,
-        saveSumWeightTxt,
-        bkgSkimTreeDir+"GluGluToContinToZZTo2e2mu_13TeV_MCFM701_pythia8.txt",
-        bkgSkimTreeDir+"GluGluToContinToZZTo2e2mu_13TeV_MCFM701_pythia8.txt",
-        )
-
-# ____________________________________________________________________________________________________________________________________________ ||
-# ggZZTo2e2tau
-ggZZTo4L_cmpList = ComponentList(
-        [ 
-            Component("ggZZTo2e2tau",bkgSkimTreeDir+"GluGluToContinToZZTo2e2tau_13TeV_MCFM701_pythia8.root","passedEvents",inUFTier2=inUFTier2),
-        ]
-        )
-
-ggZZTo2e2tau = Dataset(
-        "ggZZTo2e2tau",
-        ggZZTo4L_cmpList,
-        isMC                = True,
-        xs                  = 0.00319,
-        )
-handleSumWeight(
-        ggZZTo2e2tau,
-        system,
-        bkgTreeDir+"GluGluToContinToZZTo2e2tau_13TeV_MCFM701_pythia8.root",
-        sumWeightHist,
-        True,
-        saveSumWeightTxt,
-        bkgSkimTreeDir+"GluGluToContinToZZTo2e2tau_13TeV_MCFM701_pythia8.txt",
-        bkgSkimTreeDir+"GluGluToContinToZZTo2e2tau_13TeV_MCFM701_pythia8.txt",
-        )
-
-# ____________________________________________________________________________________________________________________________________________ ||
-# ggH
-ggH_cmpList = ComponentList(
-        [ 
-             Component("ggH",bkgSkimTreeDir+"GluGluHToZZTo4L_M125_13TeV_powheg2_JHUGenV7011_pythia8.root","passedEvents",inUFTier2=inUFTier2),
-        ]
-        )
-
-ggH = Dataset(
-        "ggH",
-        ggH_cmpList,
-        isMC                = True,
-        #xs                  = 0.01218,
-        xs                  = 48.52*0.0002768,
-        )
-handleSumWeight(
-        ggH,
-        system,
-        bkgTreeDir+"GluGluHToZZTo4L_M125_13TeV_powheg2_JHUGenV7011_pythia8.root",
-        sumWeightHist,
-        True,
-        saveSumWeightTxt,
-        bkgSkimTreeDir+"GluGluHToZZTo4L_M125_13TeV_powheg2_JHUGenV7011_pythia8.txt",
-        bkgSkimTreeDir+"GluGluHToZZTo4L_M125_13TeV_powheg2_JHUGenV7011_pythia8.txt",
-        )
-
-# ____________________________________________________________________________________________________________________________________________ ||
-# VBF
-VBF_cmpList = ComponentList(
-        [ 
-            Component("VBF",bkgSkimTreeDir+"VBF_HToZZTo4L_M125_13TeV_powheg2_JHUGenV7011_pythia8.root","passedEvents",inUFTier2=inUFTier2),
-        ]
-        )
-
-VBF = Dataset(
-        "VBF",
-        VBF_cmpList,
-        isMC                = True,
-        xs                  = 0.001044,
-        )
-handleSumWeight(
-        VBF,
-        system,
-        bkgTreeDir+"VBF_HToZZTo4L_M125_13TeV_powheg2_JHUGenV7011_pythia8.root",
-        sumWeightHist,
-        True,
-        saveSumWeightTxt,
-        bkgSkimTreeDir+"VBF_HToZZTo4L_M125_13TeV_powheg2_JHUGenV7011_pythia8.txt",
-        bkgSkimTreeDir+"VBF_HToZZTo4L_M125_13TeV_powheg2_JHUGenV7011_pythia8.txt",
-        )
-
-# ____________________________________________________________________________________________________________________________________________ ||
-# WHplus
-WHplus_cmpList = ComponentList(
-        [ 
-            Component("WHplus",bkgSkimTreeDir+"WplusH_HToZZTo4L_M125_13TeV_powheg2-minlo-HWJ_JHUGenV7011_pythia8.root","passedEvents",inUFTier2=inUFTier2),
-        ]
-        )
-
-WHplus = Dataset(
-        "WHplus",
-        WHplus_cmpList,
-        isMC                = True,
-        xs                  = 0.000232,
-        )
-handleSumWeight(
-        WHplus,
-        system,
-        bkgTreeDir+"WplusH_HToZZTo4L_M125_13TeV_powheg2-minlo-HWJ_JHUGenV7011_pythia8.root",
-        sumWeightHist,
-        True,
-        saveSumWeightTxt,
-        bkgSkimTreeDir+"WplusH_HToZZTo4L_M125_13TeV_powheg2-minlo-HWJ_JHUGenV7011_pythia8.txt",
-        bkgSkimTreeDir+"WplusH_HToZZTo4L_M125_13TeV_powheg2-minlo-HWJ_JHUGenV7011_pythia8.txt",
-        )
-
-# ____________________________________________________________________________________________________________________________________________ ||
-# WHminus
-WHminus_cmpList = ComponentList(
-        [ 
-            Component("WHminus",bkgSkimTreeDir+"WminusH_HToZZTo4L_M125_13TeV_powheg2-minlo-HWJ_JHUGenV7011_pythia8.root","passedEvents",inUFTier2=inUFTier2),
-        ]
-        )
-
-WHminus = Dataset(
-        "WHminus",
-        WHminus_cmpList,
-        isMC                = True,
-        xs                  = 0.000147,
-        )
-handleSumWeight(
-        WHminus,
-        system,
-        bkgTreeDir+"WminusH_HToZZTo4L_M125_13TeV_powheg2-minlo-HWJ_JHUGenV7011_pythia8.root",
-        sumWeightHist,
-        True,
-        saveSumWeightTxt,
-        bkgSkimTreeDir+"WminusH_HToZZTo4L_M125_13TeV_powheg2-minlo-HWJ_JHUGenV7011_pythia8.txt",
-        bkgSkimTreeDir+"WminusH_HToZZTo4L_M125_13TeV_powheg2-minlo-HWJ_JHUGenV7011_pythia8.txt",
-        )
-
-# ____________________________________________________________________________________________________________________________________________ ||
-# ZH
-ZH_cmpList = ComponentList(
-        [ 
-            Component("ZH",bkgSkimTreeDir+"ZH_HToZZ_4LFilter_M125_13TeV_powheg2-minlo-HZJ_JHUGenV7011_pythia8.root","passedEvents",inUFTier2=inUFTier2),
-        ]
-        )
-
-ZH = Dataset(
-        "ZH",
-        ZH_cmpList,
-        isMC                = True,
-        xs                  = 0.000668,
-        )
-handleSumWeight(
-        ZH,
-        system,
-        bkgTreeDir+"ZH_HToZZ_4LFilter_M125_13TeV_powheg2-minlo-HZJ_JHUGenV7011_pythia8.root",
-        sumWeightHist,
-        True,
-        saveSumWeightTxt,
-        bkgSkimTreeDir+"ZH_HToZZ_4LFilter_M125_13TeV_powheg2-minlo-HZJ_JHUGenV7011_pythia8.txt",
-        bkgSkimTreeDir+"ZH_HToZZ_4LFilter_M125_13TeV_powheg2-minlo-HZJ_JHUGenV7011_pythia8.txt",
-        )
-
-# ____________________________________________________________________________________________________________________________________________ ||
-# ttH
-ttH_cmpList = ComponentList(
-        [ 
-            Component("ttH",bkgSkimTreeDir+"ttH_HToZZ_4LFilter_M125_13TeV_powheg2_JHUGenV7011_pythia8.root","passedEvents",inUFTier2=inUFTier2),
-        ]
-        )
-
-ttH = Dataset(
-        "ttH",
-        ttH_cmpList,
-        isMC                = True,
-        xs                  = 0.000337,
-        )
-handleSumWeight(
-        ttH,
-        system,
-        bkgTreeDir+"ttH_HToZZ_4LFilter_M125_13TeV_powheg2_JHUGenV7011_pythia8.root",
-        sumWeightHist,
-        True,
-        saveSumWeightTxt,
-        bkgSkimTreeDir+"ttH_HToZZ_4LFilter_M125_13TeV_powheg2_JHUGenV7011_pythia8.txt",
-        bkgSkimTreeDir+"ttH_HToZZ_4LFilter_M125_13TeV_powheg2_JHUGenV7011_pythia8.txt",
-        )
-
-# ____________________________________________________________________________________________________________________________________________ ||
-
-bkgSamples = [
-        ggH,
-        VBF,
-        WHplus,
-        WHminus,
-        ZH,
-        ttH,
-        qqZZTo4L,
-        ggZZTo2e2mu,
-        ggZZTo2e2tau,
-        ggZZTo2mu2tau,
-        ggZZTo4e,
-        ggZZTo4mu,
-        ggZZTo4tau,
-        ]
-dataSamples = [
-        data2018,
-        ]
diff --git a/Zprime/Dataset/Run2018/__init__.py b/Zprime/Dataset/Run2018/__init__.py
deleted file mode 100644
index e69de29..0000000
diff --git a/Zprime/Dataset/__init__.py b/Zprime/Dataset/__init__.py
deleted file mode 100644
index e69de29..0000000
diff --git a/Zprime/Library/.gitignore b/Zprime/Library/.gitignore
deleted file mode 100644
index c1d9e40..0000000
--- a/Zprime/Library/.gitignore
+++ /dev/null
@@ -1,2 +0,0 @@
-*.d
-*ACLiC_dict_rdict.pcm
diff --git a/Zprime/Library/__init__.py b/Zprime/Library/__init__.py
deleted file mode 100644
index e69de29..0000000
diff --git a/Zprime/Library/build_computeAngles.C b/Zprime/Library/build_computeAngles.C
deleted file mode 100644
index f352a88..0000000
--- a/Zprime/Library/build_computeAngles.C
+++ /dev/null
@@ -1,4 +0,0 @@
-void build_computeAngles(){
-    gROOT->ProcessLine(".L computeAngles.cc++");
-
-}
diff --git a/Zprime/Library/computeAngles.cc b/Zprime/Library/computeAngles.cc
deleted file mode 100644
index 7a41d7c..0000000
--- a/Zprime/Library/computeAngles.cc
+++ /dev/null
@@ -1,339 +0,0 @@
-/** \file
- *
- *  MELA - cf. http://cmssw.cvs.cern.ch/cgi-bin/cmssw.cgi/UserCode/sbologne/MELAproject/
- *
- *  $Date: 2013/01/31 18:10:04 $
- *  $Revision: 1.7 $
- */
-
-#include "computeAngles.h"
-#include <TLorentzVector.h>
-#include <algorithm>
-#include <iostream>
-
-using namespace std;
-
-void computeAngles(TLorentzVector p4M11, int Z1_lept1Id,
-			 TLorentzVector p4M12, int Z1_lept2Id,
-			 TLorentzVector p4M21, int Z2_lept1Id,
-			 TLorentzVector p4M22, int Z2_lept2Id,
-			 Double_t& costhetastar, 
-			 Double_t& costheta1, 
-			 Double_t& costheta2, 
-			 Double_t& Phi, 
-			 Double_t& Phi1){
-
-  //build Z 4-vectors
-  TLorentzVector p4Z1 = p4M11 + p4M12;
-  TLorentzVector p4Z2 = p4M21 + p4M22;
-
-  // Sort Z1 leptons so that:
-  if ( (Z1_lept1Id*Z1_lept2Id<0 && Z1_lept1Id<0) || // for OS pairs: lep1 must be the negative one
-       (Z1_lept1Id*Z1_lept2Id>0 && p4M11.Phi()<=p4M12.Phi()) //for SS pairs: use random deterministic convention
-       ) {
-    swap(p4M11, p4M12);
-  }
-  
-  // Same for Z2 leptons
-  if ( (Z2_lept1Id*Z2_lept2Id<0 && Z2_lept1Id<0) ||
-       (Z2_lept1Id*Z2_lept2Id>0 && p4M21.Phi()<=p4M22.Phi()) 
-       ) {
-    swap(p4M21, p4M22);
-  }
-
-  
-  //build H 4-vectors
-  TLorentzVector p4H = p4Z1 + p4Z2; 
-
-  // -----------------------------------
-
-  //// costhetastar
-  TVector3 boostX = -(p4H.BoostVector());
-  TLorentzVector thep4Z1inXFrame( p4Z1 );
-  TLorentzVector thep4Z2inXFrame( p4Z2 );
-  thep4Z1inXFrame.Boost( boostX );
-  thep4Z2inXFrame.Boost( boostX );
-  TVector3 theZ1X_p3 = TVector3( thep4Z1inXFrame.X(), thep4Z1inXFrame.Y(), thep4Z1inXFrame.Z() );
-  TVector3 theZ2X_p3 = TVector3( thep4Z2inXFrame.X(), thep4Z2inXFrame.Y(), thep4Z2inXFrame.Z() );    
-  costhetastar = theZ1X_p3.CosTheta();
-
-  //// --------------------------- costheta1
-  TVector3 boostV1 = -(p4Z1.BoostVector());
-  TLorentzVector p4M11_BV1( p4M11 );
-  TLorentzVector p4M12_BV1( p4M12 );
-  TLorentzVector p4M21_BV1( p4M21 );
-  TLorentzVector p4M22_BV1( p4M22 );
-  p4M11_BV1.Boost( boostV1 );
-  p4M12_BV1.Boost( boostV1 );
-  p4M21_BV1.Boost( boostV1 );
-  p4M22_BV1.Boost( boostV1 );
-    
-  TLorentzVector p4V2_BV1 = p4M21_BV1 + p4M22_BV1;
-  //// costheta1
-  costheta1 = -p4V2_BV1.Vect().Dot( p4M11_BV1.Vect() )/p4V2_BV1.Vect().Mag()/p4M11_BV1.Vect().Mag();
-
-  //// --------------------------- costheta2
-  TVector3 boostV2 = -(p4Z2.BoostVector());
-  if (boostV2.Mag()>=1.) {
-    cout << "Warning: Mela::computeAngles: Z2 boost with beta=1, scaling down" << endl;
-    boostV2*=0.9999;
-  }
-  TLorentzVector p4M11_BV2( p4M11 );
-  TLorentzVector p4M12_BV2( p4M12 );
-  TLorentzVector p4M21_BV2( p4M21 );
-  TLorentzVector p4M22_BV2( p4M22 );
-  p4M11_BV2.Boost( boostV2 );
-  p4M12_BV2.Boost( boostV2 );
-  p4M21_BV2.Boost( boostV2 );
-  p4M22_BV2.Boost( boostV2 );
-    
-  TLorentzVector p4V1_BV2 = p4M11_BV2 + p4M12_BV2;
-  //// costheta2
-  costheta2 = -p4V1_BV2.Vect().Dot( p4M21_BV2.Vect() )/p4V1_BV2.Vect().Mag()/p4M21_BV2.Vect().Mag();
-    
-  //// --------------------------- Phi and Phi1 (old phistar1 - azimuthal production angle)
-  //    TVector3 boostX = -(thep4H.BoostVector());
-  TLorentzVector p4M11_BX( p4M11 );
-  TLorentzVector p4M12_BX( p4M12 );
-  TLorentzVector p4M21_BX( p4M21 );
-  TLorentzVector p4M22_BX( p4M22 );
-    
-  p4M11_BX.Boost( boostX );
-  p4M12_BX.Boost( boostX );
-  p4M21_BX.Boost( boostX );
-  p4M22_BX.Boost( boostX );
-    
-  TVector3 tmp1 = p4M11_BX.Vect().Cross( p4M12_BX.Vect() );
-  TVector3 tmp2 = p4M21_BX.Vect().Cross( p4M22_BX.Vect() );    
-    
-  TVector3 normal1_BX( tmp1.X()/tmp1.Mag(), tmp1.Y()/tmp1.Mag(), tmp1.Z()/tmp1.Mag() ); 
-  TVector3 normal2_BX( tmp2.X()/tmp2.Mag(), tmp2.Y()/tmp2.Mag(), tmp2.Z()/tmp2.Mag() ); 
-
-  //// Phi
-  TLorentzVector p4Z1_BX = p4M11_BX + p4M12_BX;    
-  float tmpSgnPhi = p4Z1_BX.Vect().Dot( normal1_BX.Cross( normal2_BX) );
-  float sgnPhi = tmpSgnPhi/fabs(tmpSgnPhi);
-  Phi = sgnPhi * acos( -1.*normal1_BX.Dot( normal2_BX) );
-    
-    
-  //////////////
-    
-  TVector3 beamAxis(0,0,1);
-  TVector3 tmp3 = (p4M11_BX + p4M12_BX).Vect();
-    
-  TVector3 p3V1_BX( tmp3.X()/tmp3.Mag(), tmp3.Y()/tmp3.Mag(), tmp3.Z()/tmp3.Mag() );
-  TVector3 tmp4 = beamAxis.Cross( p3V1_BX );
-  TVector3 normalSC_BX( tmp4.X()/tmp4.Mag(), tmp4.Y()/tmp4.Mag(), tmp4.Z()/tmp4.Mag() );
-        
-  //// Phi1
-  float tmpSgnPhi1 = p4Z1_BX.Vect().Dot( normal1_BX.Cross( normalSC_BX) );
-  float sgnPhi1 = tmpSgnPhi1/fabs(tmpSgnPhi1);    
-  Phi1 = sgnPhi1 * acos( normal1_BX.Dot( normalSC_BX) );    
-
-
-//  if (isnan(costhetastar) || isnan(costheta1) || isnan(costheta2) || isnan(Phi) || isnan(Phi1)){
-//    cout << "WARNING: NaN in computeAngles: " 
-//	 << costhetastar << " " 
-//	 << costheta1  << " " 
-//	 << costheta2  << " " 
-//	 << Phi  << " " 
-//	 << Phi1  << " " << endl;
-//    cout << "   boostV1: " <<boostV1.Pt() << " " << boostV1.Eta() << " " << boostV1.Phi() << " " << boostV1.Mag() << endl;
-//    cout << "   boostV2: " <<boostV2.Pt() << " " << boostV2.Eta() << " " << boostV2.Phi() << " " << boostV2.Mag() << endl;
-//  }
-
-}
-
-void computeAnglesCS(TLorentzVector p4M11, int Z1_lept1Id,
-						 TLorentzVector p4M12, int Z1_lept2Id,
-						 TLorentzVector p4M21, int Z2_lept1Id,
-						 TLorentzVector p4M22, int Z2_lept2Id,
-						 Double_t pbeam,  
-						 Double_t& costhetastar, 
-						 Double_t& costheta1, 
-						 Double_t& costheta2, 
-						 Double_t& Phi, 
-						 Double_t& Phi1){
-	
-
-	TVector3 LabXaxis( 1.0, 0.0, 0.0 );
-	TVector3 LabYaxis( 0.0, 1.0, 0.0 );
-	TVector3 LabZaxis( 0.0, 0.0, 1.0 );
-	
-	float Mprot = 0.938;
-	float Ebeam = sqrt(pbeam*pbeam + Mprot*Mprot);
-	
-	TLorentzVector targ(0.,0.,-pbeam,Ebeam);
-	TLorentzVector beam(0.,0., pbeam,Ebeam);
-	
-	//build Z 4-vectors
-	TLorentzVector p4Z1 = p4M11 + p4M12;
-	TLorentzVector p4Z2 = p4M21 + p4M22;
-	
-	// Sort Z1 leptons so that:
-	if ( (Z1_lept1Id*Z1_lept2Id<0 && Z1_lept1Id<0) || // for OS pairs: lep1 must be the negative one
-		(Z1_lept1Id*Z1_lept2Id>0 && p4M11.Phi()<=p4M12.Phi()) //for SS pairs: use random deterministic convention
-		) {
-		swap(p4M11, p4M12);
-	}
-	
-	// Same for Z2 leptons
-	if ( (Z2_lept1Id*Z2_lept2Id<0 && Z2_lept1Id<0) ||
-		(Z2_lept1Id*Z2_lept2Id>0 && p4M21.Phi()<=p4M22.Phi()) 
-		) {
-		swap(p4M21, p4M22);
-	}
-	
-	
-	//build H 4-vectors
-	TLorentzVector p4H = p4Z1 + p4Z2; 
-	TVector3 boostX = -(p4H.BoostVector());
-
-	/////////////////////////////
-	// Collin-Sopper calculation:
-	// in the CS frame, the z-axis is along the bisectrice of one beam and the opposite of the other beam,
-	// after their boost in X
-	///////////////////////////////
-	// Rotation for the CS Frame
-	
-	TRotation rotationCS;
-	
-	TLorentzVector beaminX(beam);
-	TLorentzVector targinX(targ);
-	targinX.Boost( boostX );
-	beaminX.Boost( boostX );
-	
-	//Bisectrice: sum of unit vectors (remember: you need to invert one beam vector)
-	TVector3 beam_targ_bisecinX((beaminX.Vect().Unit() - targinX.Vect().Unit()).Unit());
-	
-	// Define a rotationCS Matrix, with Z along the bisectric, 
-	TVector3 newZaxisCS(beam_targ_bisecinX.Unit());
-	TVector3 newYaxisCS(beaminX.Vect().Unit().Cross(newZaxisCS).Unit());
-	TVector3 newXaxisCS(newYaxisCS.Unit().Cross(newZaxisCS).Unit());
-	rotationCS.RotateAxes(newXaxisCS, newYaxisCS, newZaxisCS);
-	rotationCS.Invert();
-	
-	//// costhetastar
-	TLorentzVector thep4Z1inXFrame_rotCS( p4Z1 );
-	TLorentzVector thep4Z2inXFrame_rotCS( p4Z2 );
-	thep4Z1inXFrame_rotCS.Transform(rotationCS);
-	thep4Z2inXFrame_rotCS.Transform(rotationCS);
-	thep4Z1inXFrame_rotCS.Boost( boostX );
-	thep4Z2inXFrame_rotCS.Boost( boostX );
-	TVector3 theZ1XrotCS_p3 = TVector3( thep4Z1inXFrame_rotCS.X(), thep4Z1inXFrame_rotCS.Y(), thep4Z1inXFrame_rotCS.Z() );
-	TVector3 theZ2XrotCS_p3 = TVector3( thep4Z2inXFrame_rotCS.X(), thep4Z2inXFrame_rotCS.Y(), thep4Z2inXFrame_rotCS.Z() );    
-	costhetastar = theZ1XrotCS_p3.CosTheta();
-	
-	//// --------------------------- Phi and Phi1 (old phistar1 - azimuthal production angle)
-	//    TVector3 boostX = -(thep4H.BoostVector());
-	TLorentzVector p4M11_BX_rotCS( p4M11 );
-	TLorentzVector p4M12_BX_rotCS( p4M12 );
-	TLorentzVector p4M21_BX_rotCS( p4M21 );
-	TLorentzVector p4M22_BX_rotCS( p4M22 );
-    p4M11_BX_rotCS.Transform(rotationCS);
-    p4M12_BX_rotCS.Transform(rotationCS);
-    p4M21_BX_rotCS.Transform(rotationCS);
-    p4M22_BX_rotCS.Transform(rotationCS);
-	p4M11_BX_rotCS.Boost( boostX );
-	p4M12_BX_rotCS.Boost( boostX );
-	p4M21_BX_rotCS.Boost( boostX );
-	p4M22_BX_rotCS.Boost( boostX );
-    
-	TVector3 tmp1 = p4M11_BX_rotCS.Vect().Cross( p4M12_BX_rotCS.Vect() );
-	TVector3 tmp2 = p4M21_BX_rotCS.Vect().Cross( p4M22_BX_rotCS.Vect() );    
-    
-	TVector3 normal1_BX_rotCS( tmp1.X()/tmp1.Mag(), tmp1.Y()/tmp1.Mag(), tmp1.Z()/tmp1.Mag() ); 
-	TVector3 normal2_BX_rotCS( tmp2.X()/tmp2.Mag(), tmp2.Y()/tmp2.Mag(), tmp2.Z()/tmp2.Mag() ); 
-	
-	//// Phi
-	TLorentzVector p4Z1_BX_rotCS = p4M11_BX_rotCS + p4M12_BX_rotCS;    
-	float tmpSgnPhi = p4Z1_BX_rotCS.Vect().Dot( normal1_BX_rotCS.Cross( normal2_BX_rotCS) );
-	float sgnPhi = tmpSgnPhi/fabs(tmpSgnPhi);
-	Phi = sgnPhi * acos( -1.*normal1_BX_rotCS.Dot( normal2_BX_rotCS) );
-    
-    //////////////
-    
-	TVector3 beamAxis(0,0,1);
-	TVector3 tmp3 = (p4M11_BX_rotCS + p4M12_BX_rotCS).Vect();
-    
-	TVector3 p3V1_BX_rotCS( tmp3.X()/tmp3.Mag(), tmp3.Y()/tmp3.Mag(), tmp3.Z()/tmp3.Mag() );
-	TVector3 tmp4 = beamAxis.Cross( p3V1_BX_rotCS );
-	TVector3 normalSC_BX_rotCS( tmp4.X()/tmp4.Mag(), tmp4.Y()/tmp4.Mag(), tmp4.Z()/tmp4.Mag() );
-	
-	//// Phi1
-	float tmpSgnPhi1 = p4Z1_BX_rotCS.Vect().Dot( normal1_BX_rotCS.Cross( normalSC_BX_rotCS) );
-	float sgnPhi1 = tmpSgnPhi1/fabs(tmpSgnPhi1);    
-	Phi1 = sgnPhi1 * acos( normal1_BX_rotCS.Dot( normalSC_BX_rotCS) );  
-	
-	//// --------------------------- costheta1
-	//define Z1 rotation 
-	TRotation rotationZ1;
-	TVector3 newZaxisZ1(thep4Z1inXFrame_rotCS.Vect().Unit());
-	TVector3 newXaxisZ1(newYaxisCS.Cross(newZaxisZ1).Unit() );
-	TVector3 newYaxisZ1(newZaxisZ1.Cross(newXaxisZ1).Unit() );
-	rotationZ1.RotateAxes(newXaxisZ1, newYaxisZ1, newZaxisZ1);
-	rotationZ1.Invert();
-	
-	TLorentzVector thep4Z1inXFrame_rotCS_rotZ1(thep4Z1inXFrame_rotCS);
-	thep4Z1inXFrame_rotCS_rotZ1.Transform(rotationZ1); 
-	TVector3 boostZ1inX_rotCS_rotZ1= -(thep4Z1inXFrame_rotCS_rotZ1.BoostVector());
-	
-	TLorentzVector p4M11_BX_rotCS_rotZ1(p4M11_BX_rotCS);
-	TLorentzVector p4M12_BX_rotCS_rotZ1(p4M12_BX_rotCS);
-	TLorentzVector p4M21_BX_rotCS_rotZ1(p4M21_BX_rotCS);
-	TLorentzVector p4M22_BX_rotCS_rotZ1(p4M22_BX_rotCS);
-	p4M11_BX_rotCS_rotZ1.Transform(rotationZ1); 
-	p4M12_BX_rotCS_rotZ1.Transform(rotationZ1); 
-	p4M21_BX_rotCS_rotZ1.Transform(rotationZ1); 
-	p4M22_BX_rotCS_rotZ1.Transform(rotationZ1); 
-	p4M11_BX_rotCS_rotZ1.Boost(boostZ1inX_rotCS_rotZ1);
-	p4M12_BX_rotCS_rotZ1.Boost(boostZ1inX_rotCS_rotZ1);
-	p4M21_BX_rotCS_rotZ1.Boost(boostZ1inX_rotCS_rotZ1);
-	p4M22_BX_rotCS_rotZ1.Boost(boostZ1inX_rotCS_rotZ1);
-    
-	TLorentzVector p4V2_BX_rotCS_rotZ1 = p4M21_BX_rotCS_rotZ1 + p4M22_BX_rotCS_rotZ1;
-	//// costheta1
-	costheta1 = -p4V2_BX_rotCS_rotZ1.Vect().Dot( p4M11_BX_rotCS_rotZ1.Vect() )/p4V2_BX_rotCS_rotZ1.Vect().Mag()/p4M11_BX_rotCS_rotZ1.Vect().Mag();
-	
-	//// --------------------------- costheta2
-	//define Z2 rotation 
-	TRotation rotationZ2;
-	TVector3 newZaxisZ2(thep4Z2inXFrame_rotCS.Vect().Unit());
-	TVector3 newXaxisZ2(newYaxisCS.Cross(newZaxisZ2).Unit() );
-	TVector3 newYaxisZ2(newZaxisZ2.Cross(newXaxisZ2).Unit() );
-	rotationZ2.RotateAxes(newXaxisZ2, newYaxisZ2, newZaxisZ2);
-	rotationZ2.Invert();
-	
-	TLorentzVector thep4Z2inXFrame_rotCS_rotZ2(thep4Z2inXFrame_rotCS);
-	thep4Z2inXFrame_rotCS_rotZ2.Transform(rotationZ2); 
-	TVector3 boostZ2inX_rotCS_rotZ2= -(thep4Z2inXFrame_rotCS_rotZ2.BoostVector());
-	
-	TLorentzVector p4M11_BX_rotCS_rotZ2(p4M11_BX_rotCS);
-	TLorentzVector p4M12_BX_rotCS_rotZ2(p4M12_BX_rotCS);
-	TLorentzVector p4M21_BX_rotCS_rotZ2(p4M21_BX_rotCS);
-	TLorentzVector p4M22_BX_rotCS_rotZ2(p4M22_BX_rotCS);
-	p4M11_BX_rotCS_rotZ2.Transform(rotationZ2); 
-	p4M12_BX_rotCS_rotZ2.Transform(rotationZ2); 
-	p4M21_BX_rotCS_rotZ2.Transform(rotationZ2); 
-	p4M22_BX_rotCS_rotZ2.Transform(rotationZ2); 
-	p4M11_BX_rotCS_rotZ2.Boost(boostZ2inX_rotCS_rotZ2);
-	p4M12_BX_rotCS_rotZ2.Boost(boostZ2inX_rotCS_rotZ2);
-	p4M21_BX_rotCS_rotZ2.Boost(boostZ2inX_rotCS_rotZ2);
-	p4M22_BX_rotCS_rotZ2.Boost(boostZ2inX_rotCS_rotZ2);
-	
-
-	TLorentzVector p4V1_BX_rotCS_rotZ2= p4M11_BX_rotCS_rotZ2 + p4M12_BX_rotCS_rotZ2;
-	//// costheta2
-	costheta2 = -p4V1_BX_rotCS_rotZ2.Vect().Dot( p4M21_BX_rotCS_rotZ2.Vect() )/p4V1_BX_rotCS_rotZ2.Vect().Mag()/p4M21_BX_rotCS_rotZ2.Vect().Mag();
-
-
-//  if (isnan(costhetastar) || isnan(costheta1) || isnan(costheta2) || isnan(Phi) || isnan(Phi1)){
-//    cout << "WARNING: NaN in computeAngles: " 
-//	 << costhetastar << " " 
-//	 << costheta1  << " " 
-//	 << costheta2  << " " 
-//	 << Phi  << " " 
-//	 << Phi1  << " " << endl;
-//  }
-}
-
diff --git a/Zprime/Library/computeAngles.h b/Zprime/Library/computeAngles.h
deleted file mode 100644
index 99456e9..0000000
--- a/Zprime/Library/computeAngles.h
+++ /dev/null
@@ -1,36 +0,0 @@
-#ifndef computeAngles_h
-#define computeAngles_h
-
-#include <stdio.h>
-#include <iostream>
-#include "TLorentzVector.h"
-
-/// Compute decay angles from the lepton four-vectors and pdgIds.  
-/// Theta1 is the angle corresponding to Z1.
-/// Z1_lept1 and  Z1_lept2 are supposed to come from the same Z.
-/// Leptons are re-ordered internally according to a standard convention:
-/// lept1 = negative-charged lepton (for OS pairs).
-
-using namespace std;  
-
-void computeAngles(TLorentzVector Z1_lept1, int Z1_lept1Id,
-        TLorentzVector Z1_lept2, int Z1_lept2Id,
-        TLorentzVector Z2_lept1, int Z2_lept1Id,
-        TLorentzVector Z2_lept2, int Z2_lept2Id,
-        Double_t& costhetastar, 
-        Double_t& costheta1, 
-        Double_t& costheta2, 
-        Double_t& Phi, 
-        Double_t& Phi1);
-
-void computeAnglesCS(TLorentzVector Z1_lept1, int Z1_lept1Id,
-        TLorentzVector Z1_lept2, int Z1_lept2Id,
-        TLorentzVector Z2_lept1, int Z2_lept1Id,
-        TLorentzVector Z2_lept2, int Z2_lept2Id,
-        Double_t pbeam,  
-        Double_t& costhetastar, 
-        Double_t& costheta1, 
-        Double_t& costheta2, 
-        Double_t& Phi, 
-        Double_t& Phi1);	
-#endif
diff --git a/Zprime/Physics/Zp.py b/Zprime/Physics/Zp.py
deleted file mode 100644
index 8475b77..0000000
--- a/Zprime/Physics/Zp.py
+++ /dev/null
@@ -1,9 +0,0 @@
-from Core.BaseObject import BaseObject
-
-Zp = BaseObject("Zp",
-        pdgId=999888,
-        )
-
-Z = BaseObject("Z",
-        pdgId=23,
-        )
diff --git a/Zprime/Physics/__init__.py b/Zprime/Physics/__init__.py
deleted file mode 100644
index e69de29..0000000
diff --git a/Zprime/Producer/MVAProducer.py b/Zprime/Producer/MVAProducer.py
deleted file mode 100644
index 0c2e3a2..0000000
--- a/Zprime/Producer/MVAProducer.py
+++ /dev/null
@@ -1,25 +0,0 @@
-from Core.Module import Module
-from sklearn.externals import joblib
-import numpy as np
-
-mlp_classifier_fname        = "mlp-classifier.pkl"
-x_train_fname               = "X_train.npy"
-y_train_fname               = "Y_train.npy"
-x_validation_fname          = "X_validation.npy"
-y_validation_fname          = "Y_validation.npy"
-
-class MVASkimmer(Module):
-    def __init__(self,name,mva_setting):
-        super(MVASkimmer,self).__init__(name)
-        self.mva_setting = mva_setting
-
-    def begin(self):
-        self.clf = joblib.load(self.mva_setting.modelPath)
-
-    def analyze(self,event):
-        npArray = np.array(self.mva_setting.varFunc(event)).reshape(1, -1)
-        event.prob = self.clf.predict_proba(npArray)
-        return True
-
-    def end(self):
-        self.mva_setting.varFunc.end()
diff --git a/Zprime/Producer/VariableProducer.py b/Zprime/Producer/VariableProducer.py
deleted file mode 100644
index 55231ae..0000000
--- a/Zprime/Producer/VariableProducer.py
+++ /dev/null
@@ -1,53 +0,0 @@
-from Core.Module import Module
-from Utils.DeltaR import deltaR,deltaPhi
-
-import ROOT
-
-muonMass = 0.
-
-class VariableProducer(Module):
-    def begin(self):
-        ROOT.gSystem.Load("Library/computeAngles_cc.so")
-
-    def analyze(self,event):
-        event.deltaRL12 = deltaR(event.etaL1[0],event.phiL1[0],event.etaL2[0],event.phiL2[0])
-        event.deltaRL34 = deltaR(event.etaL3[0],event.phiL3[0],event.etaL4[0],event.phiL4[0])
-        event.vecL1 = ROOT.TLorentzVector()
-        event.vecL1.SetPtEtaPhiM(event.pTL1[0],event.etaL1[0],event.phiL1[0],muonMass)
-
-        event.vecL2 = ROOT.TLorentzVector()
-        event.vecL2.SetPtEtaPhiM(event.pTL2[0],event.etaL2[0],event.phiL2[0],muonMass)
-        
-        event.vecL3 = ROOT.TLorentzVector()
-        event.vecL3.SetPtEtaPhiM(event.pTL3[0],event.etaL3[0],event.phiL3[0],muonMass)
-        
-        event.vecL4 = ROOT.TLorentzVector()
-        event.vecL4.SetPtEtaPhiM(event.pTL4[0],event.etaL4[0],event.phiL4[0],muonMass)
-
-        event.vecZ1 = event.vecL1 + event.vecL2
-        event.vecZ2 = event.vecL3 + event.vecL4
-
-        event.phiL21 = deltaPhi(event.phiL2[0],event.phiL1[0])
-        event.phiL31 = deltaPhi(event.phiL3[0],event.phiL1[0])
-        event.phiL41 = deltaPhi(event.phiL4[0],event.phiL1[0])
-
-        event.cosThetaStar = ROOT.Double(0.)
-        event.cosTheta1 = ROOT.Double(0.)
-        event.cosTheta2 = ROOT.Double(0.)
-        event.phi = ROOT.Double(0.)
-        event.phi1 = ROOT.Double(0.)
-
-        ROOT.computeAngles(
-                event.vecL1,event.idL1[0],
-                event.vecL2,event.idL2[0],
-                event.vecL3,event.idL3[0],
-                event.vecL4,event.idL4[0],
-                event.cosThetaStar,
-                event.cosTheta1,
-                event.cosTheta2,
-                event.phi,
-                event.phi1,
-                )
-
-        return True
-        
diff --git a/Zprime/Producer/ZCandProducer.py b/Zprime/Producer/ZCandProducer.py
deleted file mode 100644
index c709d92..0000000
--- a/Zprime/Producer/ZCandProducer.py
+++ /dev/null
@@ -1,14 +0,0 @@
-from Core.Module import Module
-from Core.Collection import Collection
-
-from Zprime.Physics.Zp import Zp,Z
-
-var_lep_str = "lep"
-
-class ZCandProducer(Module):
-    def analyze(self,event):
-        event.leptons = [l for l in Collection(event,var_lep_str)]
-        event.leptons_Zp = [l for l in event.leptons if abs(l.matchedR03_MomId) == Zp.pdgId]
-        event.leptons_nonZp = [l for l in event.leptons if abs(l.matchedR03_MomId) != Zp.pdgId]
-        event.leptons_matched = event.leptons_Zp if self.dataset.isZp else event.leptons_nonZp
-        return True
diff --git a/Zprime/Producer/__init__.py b/Zprime/Producer/__init__.py
deleted file mode 100644
index e69de29..0000000
diff --git a/Zprime/Script/fakerate_cfg.py b/Zprime/Script/fakerate_cfg.py
deleted file mode 100644
index 24c7c5f..0000000
--- a/Zprime/Script/fakerate_cfg.py
+++ /dev/null
@@ -1,63 +0,0 @@
-import ROOT
-import numpy
-
-ROOT.gROOT.SetBatch(ROOT.kTRUE)
-
-inputPath_pass   = "/raid/raid7/kshi/Zprime/Zto4l/FakeRate/Run2017/2020-03-13/finalstate_mmmm/2P2F/Lep3/passIso_endcap/Data2017/DataMCDistribution.root"
-inputPath_fail   = "/raid/raid7/kshi/Zprime/Zto4l/FakeRate/Run2017/2020-03-13/finalstate_mmmm/2P2F/Lep3/failIso_endcap/Data2017/DataMCDistribution.root"
-outputPath  = "/home/kshi/public_html/Zprime/Zto4l/FakeRate/Run2017/2020-03-13/finalstate_mmmm/2P2F/Lep3/fr_ratio/fr_endcap.pdf"
-file_outputPath = "/raid/raid7/kshi/Zprime/Zto4l/FakeRate/Run2017/2020-03-13/finalstate_mmmm/2P2F/Lep3/fr_ratio/ratioPlot.root"
-histName    = "mu3Pt_4mu"
-
-inputFile_pass   = ROOT.TFile(inputPath_pass,"READ")
-inputFile_fail   = ROOT.TFile(inputPath_fail,"READ")
-pass_hist        = inputFile_pass.Get(histName)
-fail_hist        = inputFile_fail.Get(histName)
-
-#ratioPlot = new ROOT.TFile("ratioPlot_endcap.root","NEW")
-
-xbins = numpy.array([0.,2.,4.,6.,8.,10.,13.,17.,20.,25.,35.,100.])
-#print xbins
-histList = [
-        pass_hist,
-        fail_hist,
-        ]
-
-#for hist in histList:
-    #for i in range(9) :
-        #hist.SetBinContent(i,i)
-    #hist.GetXaxis().SetRangeUser(0.,100.)
-    #hist = hist.Rebin(8,"fr",xbins)
-    #hist = hist.Sumw2
-
-pass_hist.GetXaxis().SetRangeUser(0.,100.)
-pass_hist.Sumw2()
-pass_hist_new = pass_hist.Rebin(11,"fr_endcap",xbins)
-fail_hist.GetXaxis().SetRangeUser(0.,100.)
-fail_hist.Sumw2()
-fail_hist_new = fail_hist.Rebin(11,"fr_endcap",xbins)
-
-#x = fail_hist_new.GetBinContent(1)
-#print x
-
-
-c = ROOT.TCanvas()
-fakerate    = pass_hist_new.Clone()
-fakerate.Divide(fakerate,fail_hist_new,1,1)
-#fakerate.GetXaxis().SetRangeUser(0.,100.)
-#fakerate.Sumw2()
-#fakerate_new = fakerate.Rebin(8,"fr",xbins)
-
-fakerate.Draw()
-#fail_hist_new.Draw()
-c.SaveAs(outputPath)
-
-
-fakerate    = pass_hist_new.Clone()
-fakerate.Divide(fakerate,fail_hist_new,1,1)
-
-ratioPlot_endcap    = ROOT.TFile.Open(file_outputPath,"UPDATE")
-ratioPlot_endcap.cd()
-fakerate.Write()
-ratioPlot_endcap.Close()
-
diff --git a/Zprime/Sequence/RecoSequence.py b/Zprime/Sequence/RecoSequence.py
deleted file mode 100644
index e992edc..0000000
--- a/Zprime/Sequence/RecoSequence.py
+++ /dev/null
@@ -1,35 +0,0 @@
-from Core.Sequence import Sequence
-
-from Zprime.Skimmer.AnalysisSkimmer import AnalysisSkimmer
-from Zprime.Producer.VariableProducer import VariableProducer
-from DarkZ.Weighter.DataMCWeighter import DataMCWeighter
-from DarkZ.Weighter.NLOWeighter import NLOWeighter
-from Zprime.Skimmer.FinalstateSkimmer import FinalstateSkimmer
-from Zprime.Weighter.FakeRateWeighter import FakeRateWeighter
-
-from NanoAOD.Weighter.XSWeighter import XSWeighter # Stealing module from NanoAOD framework
-
-SRSkimmer               = AnalysisSkimmer("SRSkimmer")
-finalstateSkimmer       = FinalstateSkimmer("FinalstateSkimmer")
-
-dataMCWeighter          = DataMCWeighter("DataMCWeighter")
-nloWeighter             = NLOWeighter("NLOWeighter")
-xsWeighter              = XSWeighter("XSWeighter")
-varProducer             = VariableProducer("VariableProducer")
-fakerateWeighter        = FakeRateWeighter("FakeRateWeighter")
-
-signal_sequence = Sequence()
-signal_sequence.add(SRSkimmer)
-signal_sequence.add(xsWeighter)
-signal_sequence.add(dataMCWeighter)
-signal_sequence.add(nloWeighter)
-signal_sequence.add(varProducer)
-#signal_sequence.add(fakerateWeighter)
-
-fr_sequence = Sequence()
-fr_sequence.add(SRSkimmer)
-fr_sequence.add(finalstateSkimmer)
-fr_sequence.add(xsWeighter)
-fr_sequence.add(dataMCWeighter)
-fr_sequence.add(nloWeighter)
-fr_sequence.add(varProducer)
diff --git a/Zprime/Sequence/__init__.py b/Zprime/Sequence/__init__.py
deleted file mode 100644
index e69de29..0000000
diff --git a/Zprime/Skimmer/FinalstateSkimmer.py b/Zprime/Skimmer/FinalstateSkimmer.py
deleted file mode 100644
index 1c5ebba..0000000
--- a/Zprime/Skimmer/FinalstateSkimmer.py
+++ /dev/null
@@ -1,23 +0,0 @@
-from Core.Module import Module
-import ROOT as r
-
-class FinalstateSkimmer(Module):
-    def __init__(self,name):
-        super(FinalstateSkimmer,self).__init__(name)
-        
-    def analyze(self,event):
-        if ("Data2017" in self.dataset.name) or ("WZTo3LNu" in self.dataset.name) or ("TTJets" in self.dataset.name) or ("DYJetsToLL_M50" in self.dataset.name) or ("DYJetsToLL_M10To50" in self.dataset.name):
-            if abs(event.idL1[0]) == 13 and abs(event.idL2[0]) == 13 and abs(event.idL3[0]) == 13 and abs(event.idL4[0]) == 13 and event.IsoL3[0] < 0.35 and 1.4 < event.etaL3[0] <= 2.5:
-                return True
-            elif abs(event.idL1[0]) == 13 and abs(event.idL2[0]) == 13 and abs(event.idL3[0]) == 13 and abs(event.idL4[0]) == 13 and event.IsoL3[0] < 0.35 and 1.4 < event.etaL3[0] <= 2.5:
-                return True
-            else:
-                return False
-        if ("dataSamples" in self.dataset.name):
-            if abs(event.idL1[0]) == 13 and abs(event.idL2[0]) == 13 and abs(event.idL3[0]) == 13 and abs(event.idL4[0]) == 13 and event.IsoL3[0] < 0.35 and 1.4 < event.etaL3[0] <= 2.5:
-                return True
-            elif abs(event.idL1[0]) == 13 and abs(event.idL2[0]) == 13 and abs(event.idL3[0]) == 13 and abs(event.idL4[0]) == 13 and event.IsoL3[0] < 0.35 and 1.4 < event.etaL3[0] <= 2.5:
-                return True
-            else:
-                return False
-        return True
diff --git a/Zprime/Skimmer/MVASkimmer.py b/Zprime/Skimmer/MVASkimmer.py
deleted file mode 100644
index b5a6081..0000000
--- a/Zprime/Skimmer/MVASkimmer.py
+++ /dev/null
@@ -1,25 +0,0 @@
-from Core.Module import Module
-from sklearn.externals import joblib
-import numpy as np
-
-mlp_classifier_fname        = "mlp-classifier.pkl"
-x_train_fname               = "X_train.npy"
-y_train_fname               = "Y_train.npy"
-x_validation_fname          = "X_validation.npy"
-y_validation_fname          = "Y_validation.npy"
-
-class MVASkimmer(Module):
-    def __init__(self,name,mva_setting):
-        super(MVASkimmer,self).__init__(name)
-        self.mva_setting = mva_setting
-
-    def begin(self):
-        self.clf = joblib.load(self.mva_setting.modelPath)
-
-    def analyze(self,event):
-        npArray = np.array(self.mva_setting.varFunc(event)).reshape(1, -1)
-        prob = self.clf.predict_proba(npArray)
-        return prob[0,1] > self.mva_setting.threshold
-
-    def end(self):
-        self.mva_setting.varFunc.end()
diff --git a/Zprime/Skimmer/__init__.py b/Zprime/Skimmer/__init__.py
deleted file mode 100644
index e69de29..0000000
diff --git a/Zprime/StatTools/MVAShapeProducer.py b/Zprime/StatTools/MVAShapeProducer.py
deleted file mode 100644
index e20872f..0000000
--- a/Zprime/StatTools/MVAShapeProducer.py
+++ /dev/null
@@ -1,40 +0,0 @@
-from Core.Module import Module
-from sklearn.externals import joblib
-import numpy as np
-
-var_name = 'NNProb'
-
-class MVAShapeProducer(Module):
-    def __init__(self,name,channelDict={},binning=[],modelDict={},varFunc=None):
-        self.name = name
-        self.channelNames = channelDict.keys()
-        self.channelDict = channelDict
-        self.binning = [100,0.,1.] if not binning else binning
-        self.clfDict = {}
-        self.varFunc = varFunc
-        self.modelDict = modelDict
-
-    def begin(self):
-        for model,modelPath in self.modelDict.iteritems():
-            self.clfDict[model] = joblib.load(modelPath)
-
-        for channelName in self.channelNames:
-            for model in self.modelDict:
-                histName = var_name+'_'+model+'_'+channelName 
-                histSettingList = [histName,"TH1D",histName,"",]+self.binning
-                self.writer.book(*histSettingList)
-
-    def analyze(self,event):
-        for channelName,selFunc in self.channelDict.iteritems():
-            if selFunc(event): 
-                for model,clf in self.clfDict.iteritems():
-                    npArray = np.array(self.varFunc(event)).reshape(1, -1)
-                    prob = clf.predict_proba(npArray)
-                    histName = var_name+'_'+model+'_'+channelName 
-                    self.writer.objs[histName].Fill(prob[0,1],event.weight)
-        return True
-
-    def end(self):
-        self.varFunc.end()
-        for channelName,selFunc in self.channelDict.iteritems():
-            selFunc.end()
diff --git a/Zprime/StatTools/ParaYieldProducer.py b/Zprime/StatTools/ParaYieldProducer.py
deleted file mode 100644
index 145f254..0000000
--- a/Zprime/StatTools/ParaYieldProducer.py
+++ /dev/null
@@ -1,38 +0,0 @@
-from Core.Module import Module
-
-mZ1_var_name = "mZ1"
-mZ2_var_name = "mZ2"
-
-class ParaYieldProducer(Module):
-    def __init__(self,name,channelDict={},binning=[],norm_binning=[],postfix=""):
-        self.name = name
-        self.channelNames = channelDict.keys()
-        if channelDict: self.channelNames.append("comb")
-        self.channelDict = channelDict
-        self.mZ1_binning = [12000,0.,120.] if not binning else binning
-        self.mZ2_binning = [12000,0.,120.] if not binning else binning
-        self.hist_postfix = "-Norm" if not postfix else postfix
-
-    def begin(self):
-        for channelName in self.channelNames:
-            histName = mZ1_var_name+'_'+channelName 
-            histSettingList = [histName,"TH1D",histName,"",]+self.mZ1_binning
-            self.writer.book(*histSettingList)
-            histName = mZ2_var_name+'_'+channelName 
-            histSettingList = [histName,"TH1D",histName,"",]+self.mZ2_binning
-            self.writer.book(*histSettingList)
-
-    def analyze(self,event):
-        histName = "comb"
-        self.writer.objs[mZ1_var_name+"_"+histName].Fill(event.massZ1[0],event.weight)
-        self.writer.objs[mZ2_var_name+"_"+histName].Fill(event.massZ2[0],event.weight)
-        for channelName,selFunc in self.channelDict.iteritems():
-            if selFunc(event): 
-                histName = channelName
-                self.writer.objs[mZ1_var_name+"_"+histName].Fill(event.massZ1[0],event.weight)
-                self.writer.objs[mZ2_var_name+"_"+histName].Fill(event.massZ2[0],event.weight)
-        return True
-
-    def end(self):
-        for channelName,selFunc in self.channelDict.iteritems():
-            selFunc.end()
diff --git a/Zprime/StatTools/__init__.py b/Zprime/StatTools/__init__.py
deleted file mode 100644
index e69de29..0000000
diff --git a/Zprime/Weighter/FakeRateWeighter.py b/Zprime/Weighter/FakeRateWeighter.py
deleted file mode 100644
index 61bf120..0000000
--- a/Zprime/Weighter/FakeRateWeighter.py
+++ /dev/null
@@ -1,30 +0,0 @@
-from Core.Module import Module
-import ROOT
-
-analyze_name = "analyze"
-make_map_name = "make_map"
-syst_name = "syst"
-
-class FakeRateWeighter(Module):
-    def __init__(self,name,task="analyze"):
-        super(FakeRateWeighter,self).__init__(name)
-        self.task = task
-        self.deltaR_iso = 0.6
-
-    def analyze(self,event):
-        event.weight_FRUniIso = 1.
-        event.weight_FRAsymIso = 1.
-        if "ZPlusX" in self.dataset.name and self.task == analyze_name:
-            if event.FRWeightProd[0] == -1.: return False
-            if event.nFailedLeptonsZ2[0] == 1: 
-                event.weight *= event.FRWeightProd[0]
-                event.weight_FRUniIso *= event.FRWeightProd[0]/event.FRWeightProd[0]
-                event.weight_FRAsymIso *= event.FRWeightProd[0]/event.FRWeightProd[0]
-            elif event.nFailedLeptonsZ2[0] == 2: 
-                event.weight *= -1*event.FRWeightProd[0]
-                if event.deltaRL34 < 0.6:
-                    event.weight_FRUniIso *= event.FRWeightProd_UniIso[0]/event.FRWeightProd[0]
-                    event.weight_FRAsymIso *= event.FRWeightProd_AsymIso[0]/event.FRWeightProd[0]
-            else:
-                return False
-        return True
diff --git a/Zprime/Weighter/__init__.py b/Zprime/Weighter/__init__.py
deleted file mode 100644
index e69de29..0000000
diff --git a/Zprime/__init__.py b/Zprime/__init__.py
deleted file mode 100644
index e69de29..0000000
diff --git a/Zprime/make_csv_Run2016_ZCand_cfg.py b/Zprime/make_csv_Run2016_ZCand_cfg.py
deleted file mode 100644
index a5036e9..0000000
--- a/Zprime/make_csv_Run2016_ZCand_cfg.py
+++ /dev/null
@@ -1,44 +0,0 @@
-from Core.Sequence import Sequence
-from Core.EndSequence import EndSequence
-from Core.OutputInfo import OutputInfo
-from Core.Utils.LambdaFunc import LambdaFunc
-from Utils.System import system
-
-from Zprime.Dataset.Run2016.SkimTree_Bkg_m4l70 import * 
-from Zprime.Dataset.Run2016.SkimTree_Zprime_m4l70 import * 
-from Zprime.Sequence.RecoSequence import * 
-from Zprime.Producer.ZCandProducer import ZCandProducer
-
-from Zprime.Config.MergeSampleDict import mergeSampleDict
-from Zprime.Config.ZCandPlotDefinition import plots
-
-from Common.CSVFileProducer import CSVFileProducer,CSVFileSetting 
-
-User                    = os.environ['USER']
-#out_path                = "MVA/Input/2019-06-10_Run2017_m4l-mZ1-mZ2-cosTheta1-cosTheta2-cosThetaStar-phi-phi1/"
-out_path                = "ZCand_Classification/2020-04-15_Run2017/"
-lumi                    = 41.4
-nCores                  = 5
-outputDir               = system.getStoragePath()+"/"+User+"/Higgs/Zprime/"+out_path
-nEvents                 = -1
-disableProgressBar      = False
-#componentList           = sigSampleDict.values() 
-componentList           = [sigSampleDict[15],]
-justEndSequence         = False
-
-for dataset in componentList:
-    if dataset.isMC:
-        dataset.lumi = lumi
-    for component in dataset.componentList:
-        component.maxEvents = nEvents
-
-sequence                = signal_sequence
-zcandProducer           = ZCandProducer("ZCandProducer")
-
-sequence.add(zcandProducer)
-
-outputInfo              = OutputInfo("OutputInfo")
-outputInfo.outputDir    = outputDir
-outputInfo.TFileName    = "TrainingInput.root"
-
-endSequence = EndSequence(skipHadd=justEndSequence)
diff --git a/Zprime/make_csv_Run2016_cfg.py b/Zprime/make_csv_Run2016_cfg.py
deleted file mode 100644
index 5a108d1..0000000
--- a/Zprime/make_csv_Run2016_cfg.py
+++ /dev/null
@@ -1,71 +0,0 @@
-from Core.Sequence import Sequence
-from Core.EndSequence import EndSequence
-from Core.OutputInfo import OutputInfo
-from Core.Utils.LambdaFunc import LambdaFunc
-from Utils.System import system
-
-from Zprime.Dataset.Run2016.SkimTree_Bkg_m4l70 import * 
-from Zprime.Dataset.Run2016.SkimTree_Zprime_m4l70 import * 
-from Zprime.Sequence.RecoSequence import * 
-
-from Zprime.Config.MergeSampleDict import mergeSampleDict
-
-from Common.CSVFileProducer import CSVFileProducer,CSVFileSetting 
-
-User                    = os.environ['USER']
-#out_path                = "MVA/Input/2020-04-06_Run2016_m4l-mZ1-mZ2-cosTheta1-cosTheta2-cosThetaStar-phi-phi1/"
-#out_path                = "MVA/Input/2020-04-25_Run2016_m4l-mZ1-mZ2-cosTheta1-cosTheta2-cosThetaStar-phi-phi1/"
-out_path                = "MVA/Input/2020-04-26_Run2016_m4l-mZ1-mZ2-cosTheta1-cosTheta2-cosThetaStar-phi-phi1/"
-lumi                    = 41.4
-nCores                  = 1
-outputDir               = system.getStoragePath()+"/"+User+"/Higgs/Zprime/"+out_path
-nEvents                 = -1
-disableProgressBar      = False
-#componentList           = bkgSamples + sigSampleDict.values()
-componentList           = bkgSamples
-#componentList           = sigSampleDict.values()
-justEndSequence         = False
-
-for dataset in componentList:
-    if dataset.isMC:
-        dataset.lumi = lumi
-    for component in dataset.componentList:
-        component.maxEvents = nEvents
-
-sequence                = signal_sequence
-
-varsToWrite             = [
-                            LambdaFunc("x: x.pTL1[0]"),
-                            LambdaFunc("x: x.pTL2[0]"),
-                            LambdaFunc("x: x.pTL3[0]"),
-                            LambdaFunc("x: x.pTL4[0]"),
-                            LambdaFunc("x: x.etaL1[0]"),
-                            LambdaFunc("x: x.etaL2[0]"),
-                            LambdaFunc("x: x.etaL3[0]"),
-                            LambdaFunc("x: x.etaL4[0]"),
-                            LambdaFunc("x: x.phiL1[0]"),
-                            LambdaFunc("x: x.phiL2[0]"),
-                            LambdaFunc("x: x.phiL3[0]"),
-                            LambdaFunc("x: x.phiL4[0]"),
-                            LambdaFunc("x: x.phiL21"),
-                            LambdaFunc("x: x.phiL31"),
-                            LambdaFunc("x: x.phiL41"),
-                            LambdaFunc("x: x.mass4l[0]"),
-                            LambdaFunc("x: x.massZ1[0]"),
-                            LambdaFunc("x: x.massZ2[0]"),
-                            LambdaFunc("x: x.cosTheta1"),
-                            LambdaFunc("x: x.cosTheta2"),
-                            LambdaFunc("x: x.cosThetaStar"),
-                            LambdaFunc("x: x.phi"),
-                            LambdaFunc("x: x.phi1"),
-                            #cosTheta1, cosTheta2, cosThetaStar, Phi, Phi1, diMuon2_pt, diMuon2_eta, diMuon12_delta_eta, diMuon12_delta_phi, diMuon12_delta_R
-                            ]
-csvFileSetting          = CSVFileSetting("csv",["input.csv","w"])
-csvFileProducer         = CSVFileProducer("CSVFileProducer",varsToWrite,csvFileSetting)
-sequence.add(csvFileProducer)
-
-outputInfo              = OutputInfo("OutputInfo")
-outputInfo.outputDir    = outputDir
-outputInfo.TFileName    = "TrainingInput.root"
-
-endSequence = EndSequence(skipHadd=justEndSequence)
diff --git a/Zprime/make_csv_Run2017_cfg.py b/Zprime/make_csv_Run2017_cfg.py
deleted file mode 100644
index 7e19fae..0000000
--- a/Zprime/make_csv_Run2017_cfg.py
+++ /dev/null
@@ -1,69 +0,0 @@
-from Core.Sequence import Sequence
-from Core.EndSequence import EndSequence
-from Core.OutputInfo import OutputInfo
-from Core.Utils.LambdaFunc import LambdaFunc
-from Utils.System import system
-
-from Zprime.Dataset.Run2017.SkimTree_Bkg_m4l70 import * 
-from Zprime.Dataset.Run2017.SkimTree_Zprime_m4l70 import * 
-from Zprime.Sequence.RecoSequence import * 
-
-from Zprime.Config.MergeSampleDict import mergeSampleDict
-
-from Common.CSVFileProducer import CSVFileProducer,CSVFileSetting 
-
-User                    = os.environ['USER']
-out_path                = "MVA/Input/2020-04-27_Run2017_m4l-mZ1-mZ2-cosTheta1-cosTheta2-cosThetaStar-phi-phi1/"
-lumi                    = 41.4
-nCores                  = 1
-outputDir               = system.getStoragePath()+"/"+User+"/Higgs/Zprime/"+out_path
-nEvents                 = -1
-disableProgressBar      = False
-#componentList           = bkgSamples + sigSampleDict.values()
-componentList           = bkgSamples
-#componentList           = sigSampleDict.values()
-justEndSequence         = False
-
-for dataset in componentList:
-    if dataset.isMC:
-        dataset.lumi = lumi
-    for component in dataset.componentList:
-        component.maxEvents = nEvents
-
-sequence                = signal_sequence
-
-varsToWrite             = [
-                            LambdaFunc("x: x.pTL1[0]"),
-                            LambdaFunc("x: x.pTL2[0]"),
-                            LambdaFunc("x: x.pTL3[0]"),
-                            LambdaFunc("x: x.pTL4[0]"),
-                            LambdaFunc("x: x.etaL1[0]"),
-                            LambdaFunc("x: x.etaL2[0]"),
-                            LambdaFunc("x: x.etaL3[0]"),
-                            LambdaFunc("x: x.etaL4[0]"),
-                            LambdaFunc("x: x.phiL1[0]"),
-                            LambdaFunc("x: x.phiL2[0]"),
-                            LambdaFunc("x: x.phiL3[0]"),
-                            LambdaFunc("x: x.phiL4[0]"),
-                            LambdaFunc("x: x.phiL21"),
-                            LambdaFunc("x: x.phiL31"),
-                            LambdaFunc("x: x.phiL41"),
-                            LambdaFunc("x: x.mass4l[0]"),
-                            LambdaFunc("x: x.massZ1[0]"),
-                            LambdaFunc("x: x.massZ2[0]"),
-                            LambdaFunc("x: x.cosTheta1"),
-                            LambdaFunc("x: x.cosTheta2"),
-                            LambdaFunc("x: x.cosThetaStar"),
-                            LambdaFunc("x: x.phi"),
-                            LambdaFunc("x: x.phi1"),
-                            #cosTheta1, cosTheta2, cosThetaStar, Phi, Phi1, diMuon2_pt, diMuon2_eta, diMuon12_delta_eta, diMuon12_delta_phi, diMuon12_delta_R
-                            ]
-csvFileSetting          = CSVFileSetting("csv",["input.csv","w"])
-csvFileProducer         = CSVFileProducer("CSVFileProducer",varsToWrite,csvFileSetting)
-sequence.add(csvFileProducer)
-
-outputInfo              = OutputInfo("OutputInfo")
-outputInfo.outputDir    = outputDir
-outputInfo.TFileName    = "TrainingInput.root"
-
-endSequence = EndSequence(skipHadd=justEndSequence)
diff --git a/Zprime/para_input_MVAShape_Run2017_cfg.py b/Zprime/para_input_MVAShape_Run2017_cfg.py
deleted file mode 100644
index bddaa50..0000000
--- a/Zprime/para_input_MVAShape_Run2017_cfg.py
+++ /dev/null
@@ -1,59 +0,0 @@
-from Core.Sequence import Sequence
-from Core.EndSequence import EndSequence
-from Core.OutputInfo import OutputInfo
-from Core.Utils.LambdaFunc import LambdaFunc
-from Core.BaseObject import BaseObject
-from Utils.System import system
-
-from Zprime.Dataset.Run2017.SkimTree_Bkg_m4l70 import * 
-from Zprime.Dataset.Run2017.SkimTree_Zprime_m4l70 import * 
-from Zprime.Sequence.RecoSequence import * 
-
-from Zprime.StatTools.MVAShapeProducer import MVAShapeProducer
-
-from Zprime.Config.MergeSampleDict import mergeSampleDict
-
-import os
-
-out_path = "ParaInput/EXO-18-008-MVAShape/2019-06-10_MVAInput/"
-
-User                    = os.environ['USER']
-nCores                  = 5
-lumi                    = 77.3
-outputDir               = system.getStoragePath()+"/"+User+"/Higgs/Zprime/"+out_path
-nEvents                 = -1
-disableProgressBar      = False
-componentList           = bkgSamples + sigSampleDict.values()
-justEndSequence         = False
-skipGitDetail           = False
-
-for dataset in componentList:
-    if dataset.isMC:
-        dataset.lumi = lumi
-    for component in dataset.componentList:
-        component.maxEvents = nEvents
-
-mu_ch_sel_str = 'abs(event.idL1[0]) == 13 and abs(event.idL2[0]) == 13 and abs(event.idL3[0]) == 13 and abs(event.idL4[0]) == 13'
-
-eventSelection          = LambdaFunc("event: "+mu_ch_sel_str)
-
-input_channel_dict      = {
-        "4mu": LambdaFunc('event: '+mu_ch_sel_str),
-        }
-model_dict              = {
-        "M%s"%m: "/raid/raid7/lucien/AnalysisCode/ML/Zprime-ML/result/2019-06-10_Run2017_qqZZ-zpToMuMu-M%s_m4l-mZ1-mZ2-cosTheta1-cosTheta2-cosThetaStar-phi-phi1/mlp-classifier.pkl"%m for m in [5,10,15,20,30,40,50,60,70]
-        }
-sequence                = signal_sequence
-yieldProducer           = MVAShapeProducer(
-                                "MVAShapeProducer",
-                                channelDict=input_channel_dict,
-                                modelDict=model_dict,
-                                varFunc=LambdaFunc("x: [(x.mass4l[0]-80.)/20.,x.massZ1[0]/60.,x.massZ2[0]/60.,x.cosTheta1, x.cosTheta2, x.cosThetaStar, x.phi, x.phi1,]"),
-                                )
-sequence.add(yieldProducer)
-
-outputInfo              = OutputInfo("OutputInfo")
-outputInfo.outputDir    = outputDir
-outputInfo.TFileName    = "StatInput.root"
-
-endSequence = EndSequence(skipHadd=False)
diff --git a/Zprime/para_input_MVA_Run2017_cfg.py b/Zprime/para_input_MVA_Run2017_cfg.py
deleted file mode 100644
index efd5963..0000000
--- a/Zprime/para_input_MVA_Run2017_cfg.py
+++ /dev/null
@@ -1,68 +0,0 @@
-from Core.Sequence import Sequence
-from Core.EndSequence import EndSequence
-from Core.OutputInfo import OutputInfo
-from Core.Utils.LambdaFunc import LambdaFunc
-from Core.BaseObject import BaseObject
-from Utils.System import system
-
-from Zprime.Dataset.Run2017.SkimTree_Bkg_m4l70 import * 
-from Zprime.Dataset.Run2017.SkimTree_Zprime_m4l70 import * 
-from Zprime.Sequence.RecoSequence import * 
-
-from Zprime.StatTools.ParaYieldProducer import ParaYieldProducer
-from Zprime.Skimmer.MVASkimmer import MVASkimmer
-
-from Zprime.Config.MergeSampleDict import mergeSampleDict
-
-import os
-
-#out_path = "ParaInput/EXO-18-001-Nominal/2019-06-05/"
-#out_path = "ParaInput/EXO-18-001-Nominal/2019-06-06_MVAInput_mZp10/"
-#out_path = "ParaInput/EXO-18-001-Nominal/2019-06-06_MVAInput_mZp30/"
-out_path = "ParaInput/EXO-18-001-Nominal/2019-06-10_MVAInput_mZp40/"
-
-User                    = os.environ['USER']
-nCores                  = 5
-lumi                    = 77.3
-outputDir               = system.getStoragePath()+"/lucien/Higgs/Zprime/"+out_path
-nEvents                 = -1
-disableProgressBar      = False
-#componentList           = bkgSamples
-componentList           = bkgSamples + [sigSampleDict[40]]
-#componentList           = [sigSampleDict[40]]
-#componentList           = sigSampleDict.values()
-justEndSequence         = False
-skipGitDetail           = True
-mvaSkim                 = True
-
-for dataset in componentList:
-    if dataset.isMC:
-        dataset.lumi = lumi
-    for component in dataset.componentList:
-        component.maxEvents = nEvents
-
-mu_ch_sel_str = 'abs(event.idL1[0]) == 13 and abs(event.idL2[0]) == 13 and abs(event.idL3[0]) == 13 and abs(event.idL4[0]) == 13'
-
-input_channel_dict      = {
-        "4mu": LambdaFunc('event: '+mu_ch_sel_str),
-        }
-
-sequence                = signal_sequence
-yieldProducer           = ParaYieldProducer("ParaYieldProducer",channelDict=input_channel_dict,)
-if mvaSkim:
-    mvaSkimmer          = MVASkimmer("MVSkimmer",
-                            BaseObject(
-                                "MVASetting",
-                                modelPath="/raid/raid7/lucien/AnalysisCode/ML/Zprime-ML/result/2019-06-04_Run2017_qqZZ-zpToMuMu-M40_m4l-cosTheta1-cosTheta2-cosThetaStar-phi-phi1/mlp-classifier.pkl",
-                                threshold=0.45,
-                                varFunc=LambdaFunc("x: [(x.mass4l[0]-80.)/20.,x.cosTheta1, x.cosTheta2, x.cosThetaStar, x.phi, x.phi1,]"),
-                                ),
-                            )
-    sequence.add(mvaSkimmer)
-sequence.add(yieldProducer)
-
-outputInfo              = OutputInfo("OutputInfo")
-outputInfo.outputDir    = outputDir
-outputInfo.TFileName    = "StatInput.root"
-
-endSequence = EndSequence(skipHadd=justEndSequence)
diff --git a/Zprime/para_input_Run2017_cfg.py b/Zprime/para_input_Run2017_cfg.py
deleted file mode 100644
index 5b1d485..0000000
--- a/Zprime/para_input_Run2017_cfg.py
+++ /dev/null
@@ -1,51 +0,0 @@
-from Core.Sequence import Sequence
-from Core.EndSequence import EndSequence
-from Core.OutputInfo import OutputInfo
-from Core.Utils.LambdaFunc import LambdaFunc
-from Utils.System import system
-
-from Zprime.Dataset.Run2017.SkimTree_Bkg_m4l70 import * 
-from Zprime.Dataset.Run2017.SkimTree_Zprime_m4l70 import * 
-from Zprime.Sequence.RecoSequence import * 
-
-from Zprime.StatTools.ParaYieldProducer import ParaYieldProducer
-
-from Zprime.Config.MergeSampleDict import mergeSampleDict
-
-import os
-
-out_path = "ParaInput/EXO-18-001-Nominal/2019-06-10/"
-
-User                    = os.environ['USER']
-nCores                  = 5
-lumi                    = 77.3
-outputDir               = system.getStoragePath()+"/lucien/Higgs/Zprime/"+out_path
-nEvents                 = -1
-disableProgressBar      = False
-#componentList           = bkgSamples + sigSampleDict.values()
-#componentList           = sigSampleDict.values()
-componentList           = bkgSamples
-justEndSequence         = False
-skipGitDetail           = True
-
-for dataset in componentList:
-    if dataset.isMC:
-        dataset.lumi = lumi
-    for component in dataset.componentList:
-        component.maxEvents = nEvents
-
-mu_ch_sel_str = 'abs(event.idL1[0]) == 13 and abs(event.idL2[0]) == 13 and abs(event.idL3[0]) == 13 and abs(event.idL4[0]) == 13'
-
-input_channel_dict      = {
-        "4mu": LambdaFunc('event: '+mu_ch_sel_str),
-        }
-
-sequence                = signal_sequence
-yieldProducer           = ParaYieldProducer("ParaYieldProducer",channelDict=input_channel_dict,)
-sequence.add(yieldProducer)
-
-outputInfo              = OutputInfo("OutputInfo")
-outputInfo.outputDir    = outputDir
-outputInfo.TFileName    = "StatInput.root"
-
-endSequence = EndSequence(skipHadd=justEndSequence)
diff --git a/Zprime/plot_ZCand_Run2016_cfg.py b/Zprime/plot_ZCand_Run2016_cfg.py
deleted file mode 100644
index e1fc05a..0000000
--- a/Zprime/plot_ZCand_Run2016_cfg.py
+++ /dev/null
@@ -1,71 +0,0 @@
-from Core.Sequence import Sequence
-from Core.EndSequence import EndSequence
-from Core.OutputInfo import OutputInfo
-from Core.Utils.LambdaFunc import LambdaFunc
-from Utils.System import system
-
-from Zprime.Dataset.Run2016.SkimTree_Bkg_m4l70 import * 
-from Zprime.Dataset.Run2016.SkimTree_Zprime_m4l70 import * 
-from Zprime.Sequence.RecoSequence import * 
-from Zprime.Producer.ZCandProducer import ZCandProducer
-from Zprime.Config.ZCandPlotDefinition import plots,sampleColorDict
-
-from Plotter.Plotter import Plotter
-from Plotter.PlotEndModule import PlotEndModule
-
-from Zprime.Config.MergeSampleDict import mergeSampleDict
-
-import copy
-
-User                    = os.environ['USER']
-#out_path                = "SR/DataMCDistributions/2019-06-03_Run2017/"
-out_path                = "ZCand_Plot/DataMCDistributions/2020-04-15_Run2017/"
-lumi                    = 35.9
-nCores                  = 3
-outputDir               = system.getStoragePath()+"/"+User+"/Higgs/Zprime/"+out_path
-nEvents                 = -1
-disableProgressBar      = False
-justEndSequence         = False
-
-componentList =  []
-for m,cmp in sigSampleDict.iteritems():
-    if m not in [5,10,20,30,40,50,60]: continue
-    cmp.isZp = True
-    cmp.name = cmp.name+"_Zp"
-    for p in plots:
-        p.plotSetting.normalize = True
-        p.plotSetting.linear_max_factor = 1.5
-        p.plotSetting.line_style_dict[cmp.name] = 1
-        p.plotSetting.line_color_dict[cmp.name] = sampleColorDict[m]
-    cmp_nonZp = copy.deepcopy(cmp)
-    cmp_nonZp.isZp = False
-    cmp_nonZp.name = cmp.name+"_nonZp"
-    for p in plots: 
-        p.plotSetting.line_style_dict[cmp_nonZp.name] = 2
-        p.plotSetting.line_color_dict[cmp_nonZp.name] = sampleColorDict[m]
-    componentList.append(cmp)  
-    componentList.append(cmp_nonZp)
-for cmp in bkgSamples:
-    cmp.isZp = False
-    componentList.append(cmp)  
-
-for dataset in componentList:
-    if dataset.isMC:
-        dataset.lumi = lumi
-    for component in dataset.componentList:
-        component.maxEvents = nEvents
-
-plotter                 = Plotter("Plotter",plots)
-zcandProducer           = ZCandProducer("ZCandProducer")
-
-sequence                = signal_sequence
-sequence.add(zcandProducer)
-sequence.add(plotter)
-
-outputInfo              = OutputInfo("OutputInfo")
-outputInfo.outputDir    = outputDir
-outputInfo.TFileName    = "DataMCDistribution.root"
-
-endSequence = EndSequence(skipHadd=justEndSequence)
-endModuleOutputDir = system.getPublicHtmlPath()+"/Higgs/Zprime/"+out_path
-endSequence.add(PlotEndModule(endModuleOutputDir,plots,skipSF=False))
diff --git a/Zprime/plot_Zprime_FR_Run2017_cfg.py b/Zprime/plot_Zprime_FR_Run2017_cfg.py
deleted file mode 100644
index 2067507..0000000
--- a/Zprime/plot_Zprime_FR_Run2017_cfg.py
+++ /dev/null
@@ -1,51 +0,0 @@
-from Core.Sequence import Sequence
-from Core.EndSequence import EndSequence
-from Core.OutputInfo import OutputInfo
-from Core.Utils.LambdaFunc import LambdaFunc
-from Utils.System import system
-
-from Zprime.Dataset.Run2017.SkimTree_Fakerate_Bkg_m4l70 import * 
-#from Zprime.Dataset.Run2017.SkimTree_promptCR_Bkg_m4l70 import *
-from Zprime.Sequence.RecoSequence import * 
-from Zprime.Config.PlotDefinition import *
-
-from Plotter.Plotter import Plotter
-from Plotter.PlotEndModule import PlotEndModule
-
-from Zprime.Config.MergeSampleDict import mergeSampleDict
-
-User                    = os.environ['USER']
-#out_path                = "SR/DataMCDistributions/2019-06-03_Run2017/"
-#out_path                = "DataMCDistributions/Run2017/test/"
-out_path                = "FakeRate/Run2017/2020-03-13/finalstate_mmmm/2P2F/Lep3/passIso_endcap/"
-lumi                    = 41.4
-nCores                  = 1
-outputDir               = system.getStoragePath()+"/"+User+"/Zprime/Zto4l/"+out_path
-nEvents                 = -1
-disableProgressBar      = False
-#componentList           = bkgSamples + [sigSampleDict[m] for m in [10,40,70]]
-#componentList           = bkgSamples + sigSampleDict.values()
-#componentList           = sigSampleDict.values()
-componentList           = frdataSamples + bkgSamples
-justEndSequence         = False
-
-plots = general_4mu_plots
-
-for dataset in componentList:
-    if dataset.isMC:
-        dataset.lumi = lumi
-    for component in dataset.componentList:
-        component.maxEvents = nEvents
-
-plotter                 = Plotter("Plotter",plots)
-
-sequence                = fr_sequence
-sequence.add(plotter)
-
-outputInfo              = OutputInfo("OutputInfo")
-outputInfo.outputDir    = outputDir
-outputInfo.TFileName    = "DataMCDistribution.root"
-
-endSequence = EndSequence(skipHadd=justEndSequence)
-endModuleOutputDir = system.getPublicHtmlPath()+"/Zprime/Zto4l/"+out_path
-endSequence.add(PlotEndModule(endModuleOutputDir,plots,skipSF=False))
diff --git a/Zprime/plot_Zprime_SR_Run2016_Run2017_Run2018_cfg.py b/Zprime/plot_Zprime_SR_Run2016_Run2017_Run2018_cfg.py
deleted file mode 100644
index f2e4379..0000000
--- a/Zprime/plot_Zprime_SR_Run2016_Run2017_Run2018_cfg.py
+++ /dev/null
@@ -1,53 +0,0 @@
-from Core.Sequence import Sequence
-from Core.EndSequence import EndSequence
-from Core.OutputInfo import OutputInfo
-from Core.Utils.LambdaFunc import LambdaFunc
-from Utils.System import system
-
-#from Zprime.Dataset.Run2016.SkimTree_Bkg_m4l70 import *
-#from Zprime.Dataset.Run2016.SkimTree_Zprime_m4l70 import *
-#from Zprime.Dataset.Run2017.SkimTree_Bkg_m4l70 import * 
-#from Zprime.Dataset.Run2017.SkimTree_Zprime_m4l70 import * 
-from Zprime.Dataset.Run161718.SkimTree_Zprime_m4l70 import *
-from Zprime.Sequence.RecoSequence import * 
-from Zprime.Config.PlotDefinition import *
-
-from Plotter.Plotter import Plotter
-from Plotter.PlotEndModule import PlotEndModule
-
-from Zprime.Config.MergeSampleDict_161718 import mergeSampleDict
-
-#User                    = os.environ['USER']
-User                    = "kshi"
-#out_path                = "SR/DataMCDistributions/2019-06-03_Run2017/"
-#out_path                = "DataMCDistributions/Run2016_Run2017/2020-02-24/"
-out_path                = "DataMCDistributions/Run2016_Run2017_Run2018/2020-04-13_4Gev_CR/"
-#lumi                    = 41.4
-nCores                  = 5
-outputDir               = system.getStoragePath()+"/"+User+"/Zprime/Zto4l/"+out_path
-nEvents                 = -1
-disableProgressBar      = False
-#componentList           = bkgSamples + [sigSampleDict[m] for m in [10,40,70]]
-#componentList           = bkgSamples + sigSampleDict.values()
-#componentList           = sigSampleDict.values()
-componentList           = bkgSamples + dataSamples# + sigSamples
-justEndSequence         = False
-
-plots = general_4mu_plots
-
-for dataset in componentList:
-    for component in dataset.componentList:
-        component.maxEvents = nEvents
-
-plotter                 = Plotter("Plotter",plots)
-
-sequence                = signal_sequence
-sequence.add(plotter)
-
-outputInfo              = OutputInfo("OutputInfo")
-outputInfo.outputDir    = outputDir
-outputInfo.TFileName    = "DataMCDistribution.root"
-
-endSequence = EndSequence(skipHadd=justEndSequence)
-endModuleOutputDir = system.getPublicHtmlPath()+"/Zprime/Zto4l/"+out_path
-endSequence.add(PlotEndModule(endModuleOutputDir,plots,skipSF=False))
diff --git a/Zprime/plot_Zprime_SR_Run2016_Run2017_cfg.py b/Zprime/plot_Zprime_SR_Run2016_Run2017_cfg.py
deleted file mode 100644
index 190cb59..0000000
--- a/Zprime/plot_Zprime_SR_Run2016_Run2017_cfg.py
+++ /dev/null
@@ -1,53 +0,0 @@
-from Core.Sequence import Sequence
-from Core.EndSequence import EndSequence
-from Core.OutputInfo import OutputInfo
-from Core.Utils.LambdaFunc import LambdaFunc
-from Utils.System import system
-
-#from Zprime.Dataset.Run2016.SkimTree_Bkg_m4l70 import *
-#from Zprime.Dataset.Run2016.SkimTree_Zprime_m4l70 import *
-#from Zprime.Dataset.Run2017.SkimTree_Bkg_m4l70 import * 
-#from Zprime.Dataset.Run2017.SkimTree_Zprime_m4l70 import * 
-from Zprime.Dataset.Run1617.SkimTree_Zprime_m4l70 import *
-from Zprime.Sequence.RecoSequence import * 
-from Zprime.Config.PlotDefinition import *
-
-from Plotter.Plotter import Plotter
-from Plotter.PlotEndModule import PlotEndModule
-
-from Zprime.Config.MergeSampleDict_1617 import mergeSampleDict
-
-#User                    = os.environ['USER']
-User                    = "kshi"
-#out_path                = "SR/DataMCDistributions/2019-06-03_Run2017/"
-#out_path                = "DataMCDistributions/Run2016_Run2017/2020-02-24/"
-out_path                = "DataMCDistributions/Run2016_Run2017/2020-04-13_4Gev_CR/"
-#lumi                    = 41.4
-nCores                  = 5
-outputDir               = system.getStoragePath()+"/"+User+"/Zprime/Zto4l/"+out_path
-nEvents                 = -1
-disableProgressBar      = False
-#componentList           = bkgSamples + [sigSampleDict[m] for m in [10,40,70]]
-#componentList           = bkgSamples + sigSampleDict.values()
-#componentList           = sigSampleDict.values()
-componentList           = bkgSamples + dataSamples# + sigSamples
-justEndSequence         = False
-
-plots = general_4mu_plots
-
-for dataset in componentList:
-    for component in dataset.componentList:
-        component.maxEvents = nEvents
-
-plotter                 = Plotter("Plotter",plots)
-
-sequence                = signal_sequence
-sequence.add(plotter)
-
-outputInfo              = OutputInfo("OutputInfo")
-outputInfo.outputDir    = outputDir
-outputInfo.TFileName    = "DataMCDistribution.root"
-
-endSequence = EndSequence(skipHadd=justEndSequence)
-endModuleOutputDir = system.getPublicHtmlPath()+"/Zprime/Zto4l/"+out_path
-endSequence.add(PlotEndModule(endModuleOutputDir,plots,skipSF=False))
diff --git a/Zprime/plot_Zprime_SR_Run2016_cfg.py b/Zprime/plot_Zprime_SR_Run2016_cfg.py
deleted file mode 100644
index 84c3b35..0000000
--- a/Zprime/plot_Zprime_SR_Run2016_cfg.py
+++ /dev/null
@@ -1,52 +0,0 @@
-from Core.Sequence import Sequence
-from Core.EndSequence import EndSequence
-from Core.OutputInfo import OutputInfo
-from Core.Utils.LambdaFunc import LambdaFunc
-from Utils.System import system
-
-from Zprime.Dataset.Run2016.SkimTree_Bkg_m4l70 import * 
-#from Zprime.Dataset.Run2016.SkimTree_Zprime_m4l70 import * 
-from Zprime.Sequence.RecoSequence import * 
-from Zprime.Config.PlotDefinition import *
-
-from Plotter.Plotter import Plotter
-from Plotter.PlotEndModule import PlotEndModule
-
-from Zprime.Config.MergeSampleDict import mergeSampleDict
-
-User                    = os.environ['USER']
-#out_path                = "SR/DataMCDistributions/2019-06-03_Run2017/"
-#out_path                = "DataMCDistributions/Run2016/2020-02-21/"
-out_path                = "DataMCDistributions/Run2016/2020-04-13_4Gev_CR/"
-#out_path                = "DataMCDistributions/Run2016/test/"
-lumi                    = 35.9
-nCores                  = 5
-outputDir               = system.getStoragePath()+"/"+User+"/Zprime/Zto4l/"+out_path
-nEvents                 = -1
-disableProgressBar      = False
-#componentList           = bkgSamples + [sigSampleDict[m] for m in [10,40,70]]
-#componentList           = bkgSamples + sigSampleDict.values()
-#componentList           = sigSampleDict.values()
-componentList           = bkgSamples + dataSamples 
-justEndSequence         = False
-
-plots = general_4mu_plots
-
-for dataset in componentList:
-    if dataset.isMC:
-        dataset.lumi = lumi
-    for component in dataset.componentList:
-        component.maxEvents = nEvents
-
-plotter                 = Plotter("Plotter",plots)
-
-sequence                = signal_sequence
-sequence.add(plotter)
-
-outputInfo              = OutputInfo("OutputInfo")
-outputInfo.outputDir    = outputDir
-outputInfo.TFileName    = "DataMCDistribution.root"
-
-endSequence = EndSequence(skipHadd=justEndSequence)
-endModuleOutputDir = system.getPublicHtmlPath()+"/Zprime/Zto4l/"+out_path
-endSequence.add(PlotEndModule(endModuleOutputDir,plots,skipSF=False))
diff --git a/Zprime/plot_Zprime_SR_Run2018_cfg.py b/Zprime/plot_Zprime_SR_Run2018_cfg.py
deleted file mode 100644
index fb4d7cf..0000000
--- a/Zprime/plot_Zprime_SR_Run2018_cfg.py
+++ /dev/null
@@ -1,51 +0,0 @@
-from Core.Sequence import Sequence
-from Core.EndSequence import EndSequence
-from Core.OutputInfo import OutputInfo
-from Core.Utils.LambdaFunc import LambdaFunc
-from Utils.System import system
-
-from Zprime.Dataset.Run2018.SkimTree_Bkg_m4l70 import * 
-#from Zprime.Dataset.Run2018.SkimTree_Zprime_m4l70 import * 
-from Zprime.Sequence.RecoSequence import * 
-from Zprime.Config.PlotDefinition import *
-
-from Plotter.Plotter import Plotter
-from Plotter.PlotEndModule import PlotEndModule
-
-from Zprime.Config.MergeSampleDict import mergeSampleDict
-
-User                    = os.environ['USER']
-#out_path                = "SR/DataMCDistributions/2019-06-03_Run2017/"
-#out_path                = "DataMCDistributions/Run2017/test/"
-out_path                = "DataMCDistributions/Run2018/2020-04-13_4Gev_CR/"
-lumi                    = 59.7
-nCores                  = 5
-outputDir               = system.getStoragePath()+"/"+User+"/Zprime/Zto4l/"+out_path
-nEvents                 = -1
-disableProgressBar      = False
-#componentList           = bkgSamples + [sigSampleDict[m] for m in [10,40,70]]
-#componentList           = bkgSamples + sigSampleDict.values()
-#componentList           = sigSampleDict.values()
-componentList           = dataSamples + bkgSamples# + dataSamples 
-justEndSequence         = False
-
-plots = general_4mu_plots
-
-for dataset in componentList:
-    if dataset.isMC:
-        dataset.lumi = lumi
-    for component in dataset.componentList:
-        component.maxEvents = nEvents
-
-plotter                 = Plotter("Plotter",plots)
-
-sequence                = signal_sequence
-sequence.add(plotter)
-
-outputInfo              = OutputInfo("OutputInfo")
-outputInfo.outputDir    = outputDir
-outputInfo.TFileName    = "DataMCDistribution.root"
-
-endSequence = EndSequence(skipHadd=justEndSequence)
-endModuleOutputDir = system.getPublicHtmlPath()+"/Zprime/Zto4l/"+out_path
-endSequence.add(PlotEndModule(endModuleOutputDir,plots,skipSF=False))
diff --git a/Zprime/plot_Zprime_promptCR_Run2017_cfg.py b/Zprime/plot_Zprime_promptCR_Run2017_cfg.py
deleted file mode 100644
index aa5ad8d..0000000
--- a/Zprime/plot_Zprime_promptCR_Run2017_cfg.py
+++ /dev/null
@@ -1,51 +0,0 @@
-from Core.Sequence import Sequence
-from Core.EndSequence import EndSequence
-from Core.OutputInfo import OutputInfo
-from Core.Utils.LambdaFunc import LambdaFunc
-from Utils.System import system
-
-from Zprime.Dataset.Run2017.SkimTree_promptCR_Bkg_m4l70 import * 
-from Zprime.Dataset.Run2017.SkimTree_Zprime_m4l70 import * 
-from Zprime.Sequence.RecoSequence import * 
-from Zprime.Config.PlotDefinition import *
-
-from Plotter.Plotter import Plotter
-from Plotter.PlotEndModule import PlotEndModule
-
-from Zprime.Config.MergeSampleDict import mergeSampleDict
-
-User                    = os.environ['USER']
-#out_path                = "SR/DataMCDistributions/2019-06-03_Run2017/"
-#out_path                = "DataMCDistributions/Run2017/test/"
-out_path                = "DataMCDistributions/Run2017/2020-03-04_mllLowGev_3p1f_SR/"
-lumi                    = 41.4
-nCores                  = 5
-outputDir               = system.getStoragePath()+"/"+User+"/Zprime/Zto4l/"+out_path
-nEvents                 = -1
-disableProgressBar      = False
-#componentList           = bkgSamples + [sigSampleDict[m] for m in [10,40,70]]
-#componentList           = bkgSamples + sigSampleDict.values()
-#componentList           = sigSampleDict.values()
-componentList           = dataSamples + bkgSamples 
-justEndSequence         = False
-
-plots = general_4mu_plots
-
-for dataset in componentList:
-    if dataset.isMC:
-        dataset.lumi = lumi
-    for component in dataset.componentList:
-        component.maxEvents = nEvents
-
-plotter                 = Plotter("Plotter",plots)
-
-sequence                = signal_sequence
-sequence.add(plotter)
-
-outputInfo              = OutputInfo("OutputInfo")
-outputInfo.outputDir    = outputDir
-outputInfo.TFileName    = "DataMCDistribution.root"
-
-endSequence = EndSequence(skipHadd=justEndSequence)
-endModuleOutputDir = system.getPublicHtmlPath()+"/Zprime/Zto4l/"+out_path
-endSequence.add(PlotEndModule(endModuleOutputDir,plots,skipSF=False))
